/* soapStub.h
   Generated by gSOAP 2.8.10 from ltestgsoap.h

Copyright(C) 2000-2012, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
1) GPL or 2) Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapStub_H
#define soapStub_H
#include <vector>
#include "stdsoap2.h"
#if GSOAP_VERSION != 20810
# error "GSOAP VERSION MISMATCH IN GENERATED CODE: PLEASE REINSTALL PACKAGE"
#endif


/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


#ifndef SOAP_TYPE_proto_t
#define SOAP_TYPE_proto_t (16)
/* proto-t */
enum proto_t {P_TCP = 0, P_UDP = 1, P_SDP = 2, P_UDT = 3, P_FastTCP = 4, P_HSTCP = 5};
#endif

#ifndef SOAP_TYPE_SourceType
#define SOAP_TYPE_SourceType (17)
/* SourceType */
enum SourceType {ST_CBR = 0, ST_POISSON = 1, ST_FIFO = 2, ST_FS = 3};
#endif

/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#ifndef SOAP_TYPE_tv_type
#define SOAP_TYPE_tv_type (8)
/* tv-type */
struct tv_type
{
public:
	unsigned int tv_sec;	/* required element of type xsd:unsignedInt */
	unsigned int tv_usec;	/* required element of type xsd:unsignedInt */
};
#endif

#ifndef SOAP_TYPE_sample_t
#define SOAP_TYPE_sample_t (10)
/* sample-t */
struct sample_t
{
public:
	char Header[12];	/* required element of type Array12Ofbyte */
};
#endif

#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#ifndef SOAP_TYPE_sock_opt_t
#define SOAP_TYPE_sock_opt_t (12)
/* sock-opt-t */
struct sock_opt_t
{
public:
	std::string key;	/* required element of type xsd:string */
	unsigned int value;	/* required element of type xsd:unsignedInt */
};
#endif

#ifndef SOAP_TYPE_whole_sample_t
#define SOAP_TYPE_whole_sample_t (14)
/* whole-sample-t */
struct whole_sample_t
{
public:
	char Header[24];	/* required element of type Array24Ofbyte */
};
#endif

#ifndef SOAP_TYPE_sourceDesc_t
#define SOAP_TYPE_sourceDesc_t (18)
/* sourceDesc-t */
struct sourceDesc_t
{
public:
	struct tv_type StartTime;	/* required element of type tv-type */
	struct tv_type StopTime;	/* required element of type tv-type */
	unsigned int sample_n;	/* required element of type xsd:unsignedInt */
	unsigned int maxPDUSize;	/* required element of type xsd:unsignedInt */
	unsigned int ListenAddr;	/* required element of type xsd:unsignedInt */
	unsigned short ListenPort;	/* required element of type xsd:unsignedShort */
	enum proto_t Proto;	/* required element of type proto-t */
	int Prio;	/* required element of type xsd:int */
	char TOS;	/* required element of type xsd:byte */
	bool Block;	/* required element of type xsd:boolean */
	std::vector<struct sock_opt_t >SockOpts;	/* optional element of type sock-opt-t */
};
#endif

#ifndef SOAP_TYPE_senderDesc_t
#define SOAP_TYPE_senderDesc_t (22)
/* senderDesc-t */
struct senderDesc_t
{
public:
	unsigned int LocalAddr;	/* required element of type xsd:unsignedInt */
	unsigned short LocalPort;	/* required element of type xsd:unsignedShort */
	unsigned int RemoteAddr;	/* required element of type xsd:unsignedInt */
	unsigned short RemotePort;	/* required element of type xsd:unsignedShort */
	std::string RemoteURL;	/* required element of type xsd:string */
	unsigned int Bytes;	/* required element of type xsd:unsignedInt */
	unsigned int Packets;	/* required element of type xsd:unsignedInt */
	enum proto_t Proto;	/* required element of type proto-t */
	struct tv_type StartTime;	/* required element of type tv-type */
	struct tv_type Duration;	/* required element of type tv-type */
	struct tv_type FinishTime;	/* required element of type tv-type */
	int Priority;	/* required element of type xsd:int */
	enum SourceType SType;	/* required element of type SourceType */
	char TOS;	/* required element of type xsd:byte */
	ULONG64 BPS;	/* required element of type xsd:unsignedLong */
	unsigned int Size;	/* required element of type xsd:unsignedInt */
	std::string FifoName;	/* required element of type xsd:string */
	bool TimeCorrection;	/* required element of type xsd:boolean */
	unsigned long MaxTimeDev;	/* required element of type xsd:unsignedLong */
	std::vector<struct sock_opt_t >SockOpts;	/* optional element of type sock-opt-t */
};
#endif

#ifndef SOAP_TYPE_BasicSourceStats_t
#define SOAP_TYPE_BasicSourceStats_t (26)
/* BasicSourceStats-t */
struct BasicSourceStats_t
{
public:
	struct tv_type StartTime;	/* required element of type tv-type */
	struct tv_type Duration;	/* required element of type tv-type */
	struct tv_type FinishTime;	/* required element of type tv-type */
	unsigned int SentPackets;	/* required element of type xsd:unsignedInt */
	LONG64 SentBytes;	/* required element of type xsd:long */
	unsigned int RecvPackets;	/* required element of type xsd:unsignedInt */
	LONG64 RecvBytes;	/* required element of type xsd:long */
	unsigned int Duplicates;	/* required element of type xsd:unsignedInt */
	unsigned int Reordered;	/* required element of type xsd:unsignedInt */
	unsigned int Corrupted;	/* required element of type xsd:unsignedInt */
	LONG64 DeltaTime;	/* required element of type xsd:long */
};
#endif

#ifndef SOAP_TYPE_ns__PortResponse
#define SOAP_TYPE_ns__PortResponse (30)
/* ns:PortResponse */
struct ns__PortResponse
{
public:
	unsigned short pPort;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:unsignedShort */
};
#endif

#ifndef SOAP_TYPE_ns__Port
#define SOAP_TYPE_ns__Port (31)
/* ns:Port */
struct ns__Port
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_ReleaseSSessionResponse
#define SOAP_TYPE_ReleaseSSessionResponse (32)
/* ReleaseSSessionResponse */
struct ReleaseSSessionResponse
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_ns__release_ssessionResponse
#define SOAP_TYPE_ns__release_ssessionResponse (35)
/* ns:release-ssessionResponse */
struct ns__release_ssessionResponse
{
public:
	struct ReleaseSSessionResponse response;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ReleaseSSessionResponse */
};
#endif

#ifndef SOAP_TYPE_ns__release_ssession
#define SOAP_TYPE_ns__release_ssession (36)
/* ns:release-ssession */
struct ns__release_ssession
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_ReleaseRSessionResponse
#define SOAP_TYPE_ReleaseRSessionResponse (37)
/* ReleaseRSessionResponse */
struct ReleaseRSessionResponse
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_ns__release_rsessionResponse
#define SOAP_TYPE_ns__release_rsessionResponse (40)
/* ns:release-rsessionResponse */
struct ns__release_rsessionResponse
{
public:
	struct ReleaseRSessionResponse response;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ReleaseRSessionResponse */
};
#endif

#ifndef SOAP_TYPE_ns__release_rsession
#define SOAP_TYPE_ns__release_rsession (41)
/* ns:release-rsession */
struct ns__release_rsession
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_ns__get_samples_wholeResponse
#define SOAP_TYPE_ns__get_samples_wholeResponse (45)
/* ns:get-samples-wholeResponse */
struct ns__get_samples_wholeResponse
{
public:
	std::vector<struct whole_sample_t >GetSampleList;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type whole-sample-t */
};
#endif

#ifndef SOAP_TYPE_ns__get_samples_whole
#define SOAP_TYPE_ns__get_samples_whole (46)
/* ns:get-samples-whole */
struct ns__get_samples_whole
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_ns__getBasicSourceStatsResponse
#define SOAP_TYPE_ns__getBasicSourceStatsResponse (49)
/* ns:getBasicSourceStatsResponse */
struct ns__getBasicSourceStatsResponse
{
public:
	struct BasicSourceStats_t GetBasicSourceStatics;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type BasicSourceStats-t */
};
#endif

#ifndef SOAP_TYPE_ns__getBasicSourceStats
#define SOAP_TYPE_ns__getBasicSourceStats (50)
/* ns:getBasicSourceStats */
struct ns__getBasicSourceStats
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_ns__get_samplesResponse
#define SOAP_TYPE_ns__get_samplesResponse (54)
/* ns:get-samplesResponse */
struct ns__get_samplesResponse
{
public:
	std::vector<struct sample_t >sample_list_t;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type sample-t */
};
#endif

#ifndef SOAP_TYPE_ns__get_samples
#define SOAP_TYPE_ns__get_samples (55)
/* ns:get-samples */
struct ns__get_samples
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_FinishSessionResponse
#define SOAP_TYPE_FinishSessionResponse (56)
/* FinishSessionResponse */
struct FinishSessionResponse
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_ns__finish_sessionResponse
#define SOAP_TYPE_ns__finish_sessionResponse (59)
/* ns:finish-sessionResponse */
struct ns__finish_sessionResponse
{
public:
	struct FinishSessionResponse response;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type FinishSessionResponse */
};
#endif

#ifndef SOAP_TYPE_ns__finish_session
#define SOAP_TYPE_ns__finish_session (60)
/* ns:finish-session */
struct ns__finish_session
{
public:
	unsigned int pLastSeqNo;	/* required element of type xsd:unsignedInt */
};
#endif

#ifndef SOAP_TYPE_ns__get_time_by_gsoapResponse
#define SOAP_TYPE_ns__get_time_by_gsoapResponse (63)
/* ns:get-time-by-gsoapResponse */
struct ns__get_time_by_gsoapResponse
{
public:
	struct tv_type ptv;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type tv-type */
};
#endif

#ifndef SOAP_TYPE_ns__get_time_by_gsoap
#define SOAP_TYPE_ns__get_time_by_gsoap (64)
/* ns:get-time-by-gsoap */
struct ns__get_time_by_gsoap
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_ns__start_UDP_time_portResponse
#define SOAP_TYPE_ns__start_UDP_time_portResponse (66)
/* ns:start-UDP-time-portResponse */
struct ns__start_UDP_time_portResponse
{
public:
	unsigned short OPort;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:unsignedShort */
};
#endif

#ifndef SOAP_TYPE_ns__start_UDP_time_port
#define SOAP_TYPE_ns__start_UDP_time_port (67)
/* ns:start-UDP-time-port */
struct ns__start_UDP_time_port
{
public:
	unsigned short pPort;	/* required element of type xsd:unsignedShort */
};
#endif

#ifndef SOAP_TYPE_ReleaseUDPTimePortResponse
#define SOAP_TYPE_ReleaseUDPTimePortResponse (68)
/* ReleaseUDPTimePortResponse */
struct ReleaseUDPTimePortResponse
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_ns__release_UDP_time_portResponse
#define SOAP_TYPE_ns__release_UDP_time_portResponse (71)
/* ns:release-UDP-time-portResponse */
struct ns__release_UDP_time_portResponse
{
public:
	struct ReleaseUDPTimePortResponse response;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ReleaseUDPTimePortResponse */
};
#endif

#ifndef SOAP_TYPE_ns__release_UDP_time_port
#define SOAP_TYPE_ns__release_UDP_time_port (72)
/* ns:release-UDP-time-port */
struct ns__release_UDP_time_port
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_StartRSessionResponse
#define SOAP_TYPE_StartRSessionResponse (73)
/* StartRSessionResponse */
struct StartRSessionResponse
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_ns__start_rsessionResponse
#define SOAP_TYPE_ns__start_rsessionResponse (76)
/* ns:start-rsessionResponse */
struct ns__start_rsessionResponse
{
public:
	struct StartRSessionResponse response;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type StartRSessionResponse */
};
#endif

#ifndef SOAP_TYPE_ns__start_rsession
#define SOAP_TYPE_ns__start_rsession (77)
/* ns:start-rsession */
struct ns__start_rsession
{
public:
	struct sourceDesc_t sDec;	/* required element of type sourceDesc-t */
};
#endif

#ifndef SOAP_TYPE_StartSSessionResponse
#define SOAP_TYPE_StartSSessionResponse (78)
/* StartSSessionResponse */
struct StartSSessionResponse
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_ns__start_ssessionResponse
#define SOAP_TYPE_ns__start_ssessionResponse (81)
/* ns:start-ssessionResponse */
struct ns__start_ssessionResponse
{
public:
	struct StartSSessionResponse response;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type StartSSessionResponse */
};
#endif

#ifndef SOAP_TYPE_ns__start_ssession
#define SOAP_TYPE_ns__start_ssession (82)
/* ns:start-ssession */
struct ns__start_ssession
{
public:
	struct sourceDesc_t sDec;	/* required element of type sourceDesc-t */
	struct senderDesc_t senderDesc;	/* required element of type senderDesc-t */
};
#endif

#ifndef SOAP_TYPE_ns__print_sDescResponse
#define SOAP_TYPE_ns__print_sDescResponse (85)
/* ns:print-sDescResponse */
struct ns__print_sDescResponse
{
public:
	std::string str;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns__print_sDesc
#define SOAP_TYPE_ns__print_sDesc (86)
/* ns:print-sDesc */
struct ns__print_sDesc
{
public:
	struct sourceDesc_t sDec;	/* required element of type sourceDesc-t */
};
#endif

#ifndef SOAP_TYPE_PingResponse
#define SOAP_TYPE_PingResponse (87)
/* PingResponse */
struct PingResponse
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_ns__pingResponse
#define SOAP_TYPE_ns__pingResponse (90)
/* ns:pingResponse */
struct ns__pingResponse
{
public:
	struct PingResponse response;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type PingResponse */
};
#endif

#ifndef SOAP_TYPE_ns__ping
#define SOAP_TYPE_ns__ping (91)
/* ns:ping */
struct ns__ping
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (92)
/* SOAP Header: */
struct SOAP_ENV__Header
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (93)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
public:
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (95)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
public:
	char *__any;
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (98)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
public:
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (99)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
public:
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
};
#endif

#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


#endif

/* End of soapStub.h */
