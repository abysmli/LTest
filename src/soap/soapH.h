/* soapH.h
   Generated by gSOAP 2.8.10 from ltestgsoap.h

Copyright(C) 2000-2012, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
1) GPL or 2) Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

SOAP_FMAC3 void* SOAP_FMAC4 soap_container_id_forward(struct soap*, const char*, void*, size_t, int, int, size_t, unsigned int);

SOAP_FMAC3 void SOAP_FMAC4 soap_container_insert(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_begin_send(soap) || soap_put_byte(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_begin_send(soap) || soap_put_int(soap, data, "int", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef SOAP_TYPE_long
#define SOAP_TYPE_long (24)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_long(struct soap*, long *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_long(struct soap*, const char*, int, const long *, const char*);
SOAP_FMAC3 long * SOAP_FMAC4 soap_in_long(struct soap*, const char*, long *, const char*);

#ifndef soap_write_long
#define soap_write_long(soap, data) ( soap_begin_send(soap) || soap_put_long(soap, data, "long", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_long(struct soap*, const long *, const char*, const char*);

#ifndef soap_read_long
#define soap_read_long(soap, data) ( soap_begin_recv(soap) || !soap_get_long(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 long * SOAP_FMAC4 soap_get_long(struct soap*, long *, const char*, const char*);

#ifndef SOAP_TYPE_LONG64
#define SOAP_TYPE_LONG64 (27)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_LONG64(struct soap*, LONG64 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_LONG64(struct soap*, const char*, int, const LONG64 *, const char*);
SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_in_LONG64(struct soap*, const char*, LONG64 *, const char*);

#ifndef soap_write_LONG64
#define soap_write_LONG64(soap, data) ( soap_begin_send(soap) || soap_put_LONG64(soap, data, "long", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_LONG64(struct soap*, const LONG64 *, const char*, const char*);

#ifndef soap_read_LONG64
#define soap_read_LONG64(soap, data) ( soap_begin_recv(soap) || !soap_get_LONG64(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_get_LONG64(struct soap*, LONG64 *, const char*, const char*);

#ifndef SOAP_TYPE_unsignedShort
#define SOAP_TYPE_unsignedShort (19)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedShort(struct soap*, unsigned short *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedShort(struct soap*, const char*, int, const unsigned short *, const char*);
SOAP_FMAC3 unsigned short * SOAP_FMAC4 soap_in_unsignedShort(struct soap*, const char*, unsigned short *, const char*);

#ifndef soap_write_unsignedShort
#define soap_write_unsignedShort(soap, data) ( soap_begin_send(soap) || soap_put_unsignedShort(soap, data, "unsignedShort", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedShort(struct soap*, const unsigned short *, const char*, const char*);

#ifndef soap_read_unsignedShort
#define soap_read_unsignedShort(soap, data) ( soap_begin_recv(soap) || !soap_get_unsignedShort(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 unsigned short * SOAP_FMAC4 soap_get_unsignedShort(struct soap*, unsigned short *, const char*, const char*);

#ifndef SOAP_TYPE_unsignedInt
#define SOAP_TYPE_unsignedInt (9)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedInt(struct soap*, unsigned int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedInt(struct soap*, const char*, int, const unsigned int *, const char*);
SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_in_unsignedInt(struct soap*, const char*, unsigned int *, const char*);

#ifndef soap_write_unsignedInt
#define soap_write_unsignedInt(soap, data) ( soap_begin_send(soap) || soap_put_unsignedInt(soap, data, "unsignedInt", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedInt(struct soap*, const unsigned int *, const char*, const char*);

#ifndef soap_read_unsignedInt
#define soap_read_unsignedInt(soap, data) ( soap_begin_recv(soap) || !soap_get_unsignedInt(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_get_unsignedInt(struct soap*, unsigned int *, const char*, const char*);

#ifndef SOAP_TYPE_unsignedLong
#define SOAP_TYPE_unsignedLong (25)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedLong(struct soap*, unsigned long *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedLong(struct soap*, const char*, int, const unsigned long *, const char*);
SOAP_FMAC3 unsigned long * SOAP_FMAC4 soap_in_unsignedLong(struct soap*, const char*, unsigned long *, const char*);

#ifndef soap_write_unsignedLong
#define soap_write_unsignedLong(soap, data) ( soap_begin_send(soap) || soap_put_unsignedLong(soap, data, "unsignedLong", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedLong(struct soap*, const unsigned long *, const char*, const char*);

#ifndef soap_read_unsignedLong
#define soap_read_unsignedLong(soap, data) ( soap_begin_recv(soap) || !soap_get_unsignedLong(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 unsigned long * SOAP_FMAC4 soap_get_unsignedLong(struct soap*, unsigned long *, const char*, const char*);

#ifndef SOAP_TYPE_unsignedLONG64
#define SOAP_TYPE_unsignedLONG64 (23)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedLONG64(struct soap*, ULONG64 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedLONG64(struct soap*, const char*, int, const ULONG64 *, const char*);
SOAP_FMAC3 ULONG64 * SOAP_FMAC4 soap_in_unsignedLONG64(struct soap*, const char*, ULONG64 *, const char*);

#ifndef soap_write_unsignedLONG64
#define soap_write_unsignedLONG64(soap, data) ( soap_begin_send(soap) || soap_put_unsignedLONG64(soap, data, "unsignedLong", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedLONG64(struct soap*, const ULONG64 *, const char*, const char*);

#ifndef soap_read_unsignedLONG64
#define soap_read_unsignedLONG64(soap, data) ( soap_begin_recv(soap) || !soap_get_unsignedLONG64(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ULONG64 * SOAP_FMAC4 soap_get_unsignedLONG64(struct soap*, ULONG64 *, const char*, const char*);

#ifndef SOAP_TYPE_bool
#define SOAP_TYPE_bool (20)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_bool(struct soap*, bool *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_bool(struct soap*, const char*, int, const bool *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_bool2s(struct soap*, bool);
SOAP_FMAC3 bool * SOAP_FMAC4 soap_in_bool(struct soap*, const char*, bool *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2bool(struct soap*, const char*, bool *);

#ifndef soap_write_bool
#define soap_write_bool(soap, data) ( soap_begin_send(soap) || soap_put_bool(soap, data, "boolean", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_bool(struct soap*, const bool *, const char*, const char*);

#ifndef soap_read_bool
#define soap_read_bool(soap, data) ( soap_begin_recv(soap) || !soap_get_bool(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 bool * SOAP_FMAC4 soap_get_bool(struct soap*, bool *, const char*, const char*);

#ifndef SOAP_TYPE_SourceType
#define SOAP_TYPE_SourceType (17)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SourceType(struct soap*, enum SourceType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SourceType(struct soap*, const char*, int, const enum SourceType *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_SourceType2s(struct soap*, enum SourceType);
SOAP_FMAC3 enum SourceType * SOAP_FMAC4 soap_in_SourceType(struct soap*, const char*, enum SourceType *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2SourceType(struct soap*, const char*, enum SourceType *);

#ifndef soap_write_SourceType
#define soap_write_SourceType(soap, data) ( soap_begin_send(soap) || soap_put_SourceType(soap, data, "SourceType", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SourceType(struct soap*, const enum SourceType *, const char*, const char*);

#ifndef soap_read_SourceType
#define soap_read_SourceType(soap, data) ( soap_begin_recv(soap) || !soap_get_SourceType(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 enum SourceType * SOAP_FMAC4 soap_get_SourceType(struct soap*, enum SourceType *, const char*, const char*);

#ifndef SOAP_TYPE_proto_t
#define SOAP_TYPE_proto_t (16)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_proto_t(struct soap*, enum proto_t *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_proto_t(struct soap*, const char*, int, const enum proto_t *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_proto_t2s(struct soap*, enum proto_t);
SOAP_FMAC3 enum proto_t * SOAP_FMAC4 soap_in_proto_t(struct soap*, const char*, enum proto_t *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2proto_t(struct soap*, const char*, enum proto_t *);

#ifndef soap_write_proto_t
#define soap_write_proto_t(soap, data) ( soap_begin_send(soap) || soap_put_proto_t(soap, data, "proto-t", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_proto_t(struct soap*, const enum proto_t *, const char*, const char*);

#ifndef soap_read_proto_t
#define soap_read_proto_t(soap, data) ( soap_begin_recv(soap) || !soap_get_proto_t(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 enum proto_t * SOAP_FMAC4 soap_get_proto_t(struct soap*, enum proto_t *, const char*, const char*);

#ifndef SOAP_TYPE_std__string
#define SOAP_TYPE_std__string (13)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__string(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__string(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__string(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_std__string(struct soap*, const char*, std::string*, const char*);

#ifndef soap_write_std__string
#define soap_write_std__string(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "string", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_std__string(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_read_std__string
#define soap_read_std__string(soap, data) ( soap_begin_recv(soap) || !soap_get_std__string(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_std__string(struct soap*, std::string *, const char*, const char*);

#define soap_new_std__string(soap, n) soap_instantiate_std__string(soap, n, NULL, NULL, NULL)


#define soap_delete_std__string(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::string * SOAP_FMAC2 soap_instantiate_std__string(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__string(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (99)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#define soap_new_SOAP_ENV__Fault(soap, n) soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Fault(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (98)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#define soap_new_SOAP_ENV__Reason(soap, n) soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Reason(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (95)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#define soap_new_SOAP_ENV__Detail(soap, n) soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Detail(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (93)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#define soap_new_SOAP_ENV__Code(soap, n) soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Code(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (92)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#define soap_new_SOAP_ENV__Header(soap, n) soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Header(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE_ns__ping
#define SOAP_TYPE_ns__ping (91)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__ping(struct soap*, struct ns__ping *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__ping(struct soap*, const struct ns__ping *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__ping(struct soap*, const char*, int, const struct ns__ping *, const char*);
SOAP_FMAC3 struct ns__ping * SOAP_FMAC4 soap_in_ns__ping(struct soap*, const char*, struct ns__ping *, const char*);

#ifndef soap_write_ns__ping
#define soap_write_ns__ping(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__ping(soap, data), 0) || soap_put_ns__ping(soap, data, "ns:ping", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__ping(struct soap*, const struct ns__ping *, const char*, const char*);

#ifndef soap_read_ns__ping
#define soap_read_ns__ping(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__ping(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__ping * SOAP_FMAC4 soap_get_ns__ping(struct soap*, struct ns__ping *, const char*, const char*);

#define soap_new_ns__ping(soap, n) soap_instantiate_ns__ping(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__ping(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__ping * SOAP_FMAC2 soap_instantiate_ns__ping(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__ping(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__pingResponse
#define SOAP_TYPE_ns__pingResponse (90)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__pingResponse(struct soap*, struct ns__pingResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__pingResponse(struct soap*, const struct ns__pingResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__pingResponse(struct soap*, const char*, int, const struct ns__pingResponse *, const char*);
SOAP_FMAC3 struct ns__pingResponse * SOAP_FMAC4 soap_in_ns__pingResponse(struct soap*, const char*, struct ns__pingResponse *, const char*);

#ifndef soap_write_ns__pingResponse
#define soap_write_ns__pingResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__pingResponse(soap, data), 0) || soap_put_ns__pingResponse(soap, data, "ns:pingResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__pingResponse(struct soap*, const struct ns__pingResponse *, const char*, const char*);

#ifndef soap_read_ns__pingResponse
#define soap_read_ns__pingResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__pingResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__pingResponse * SOAP_FMAC4 soap_get_ns__pingResponse(struct soap*, struct ns__pingResponse *, const char*, const char*);

#define soap_new_ns__pingResponse(soap, n) soap_instantiate_ns__pingResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__pingResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__pingResponse * SOAP_FMAC2 soap_instantiate_ns__pingResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__pingResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_PingResponse
#define SOAP_TYPE_PingResponse (87)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_PingResponse(struct soap*, struct PingResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PingResponse(struct soap*, const struct PingResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PingResponse(struct soap*, const char*, int, const struct PingResponse *, const char*);
SOAP_FMAC3 struct PingResponse * SOAP_FMAC4 soap_in_PingResponse(struct soap*, const char*, struct PingResponse *, const char*);

#ifndef soap_write_PingResponse
#define soap_write_PingResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PingResponse(soap, data), 0) || soap_put_PingResponse(soap, data, "PingResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_PingResponse(struct soap*, const struct PingResponse *, const char*, const char*);

#ifndef soap_read_PingResponse
#define soap_read_PingResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PingResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct PingResponse * SOAP_FMAC4 soap_get_PingResponse(struct soap*, struct PingResponse *, const char*, const char*);

#define soap_new_PingResponse(soap, n) soap_instantiate_PingResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_PingResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct PingResponse * SOAP_FMAC2 soap_instantiate_PingResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_PingResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__print_sDesc
#define SOAP_TYPE_ns__print_sDesc (86)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__print_sDesc(struct soap*, struct ns__print_sDesc *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__print_sDesc(struct soap*, const struct ns__print_sDesc *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__print_sDesc(struct soap*, const char*, int, const struct ns__print_sDesc *, const char*);
SOAP_FMAC3 struct ns__print_sDesc * SOAP_FMAC4 soap_in_ns__print_sDesc(struct soap*, const char*, struct ns__print_sDesc *, const char*);

#ifndef soap_write_ns__print_sDesc
#define soap_write_ns__print_sDesc(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__print_sDesc(soap, data), 0) || soap_put_ns__print_sDesc(soap, data, "ns:print-sDesc", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__print_sDesc(struct soap*, const struct ns__print_sDesc *, const char*, const char*);

#ifndef soap_read_ns__print_sDesc
#define soap_read_ns__print_sDesc(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__print_sDesc(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__print_sDesc * SOAP_FMAC4 soap_get_ns__print_sDesc(struct soap*, struct ns__print_sDesc *, const char*, const char*);

#define soap_new_ns__print_sDesc(soap, n) soap_instantiate_ns__print_sDesc(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__print_sDesc(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__print_sDesc * SOAP_FMAC2 soap_instantiate_ns__print_sDesc(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__print_sDesc(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__print_sDescResponse
#define SOAP_TYPE_ns__print_sDescResponse (85)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__print_sDescResponse(struct soap*, struct ns__print_sDescResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__print_sDescResponse(struct soap*, const struct ns__print_sDescResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__print_sDescResponse(struct soap*, const char*, int, const struct ns__print_sDescResponse *, const char*);
SOAP_FMAC3 struct ns__print_sDescResponse * SOAP_FMAC4 soap_in_ns__print_sDescResponse(struct soap*, const char*, struct ns__print_sDescResponse *, const char*);

#ifndef soap_write_ns__print_sDescResponse
#define soap_write_ns__print_sDescResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__print_sDescResponse(soap, data), 0) || soap_put_ns__print_sDescResponse(soap, data, "ns:print-sDescResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__print_sDescResponse(struct soap*, const struct ns__print_sDescResponse *, const char*, const char*);

#ifndef soap_read_ns__print_sDescResponse
#define soap_read_ns__print_sDescResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__print_sDescResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__print_sDescResponse * SOAP_FMAC4 soap_get_ns__print_sDescResponse(struct soap*, struct ns__print_sDescResponse *, const char*, const char*);

#define soap_new_ns__print_sDescResponse(soap, n) soap_instantiate_ns__print_sDescResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__print_sDescResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__print_sDescResponse * SOAP_FMAC2 soap_instantiate_ns__print_sDescResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__print_sDescResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__start_ssession
#define SOAP_TYPE_ns__start_ssession (82)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__start_ssession(struct soap*, struct ns__start_ssession *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__start_ssession(struct soap*, const struct ns__start_ssession *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__start_ssession(struct soap*, const char*, int, const struct ns__start_ssession *, const char*);
SOAP_FMAC3 struct ns__start_ssession * SOAP_FMAC4 soap_in_ns__start_ssession(struct soap*, const char*, struct ns__start_ssession *, const char*);

#ifndef soap_write_ns__start_ssession
#define soap_write_ns__start_ssession(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__start_ssession(soap, data), 0) || soap_put_ns__start_ssession(soap, data, "ns:start-ssession", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__start_ssession(struct soap*, const struct ns__start_ssession *, const char*, const char*);

#ifndef soap_read_ns__start_ssession
#define soap_read_ns__start_ssession(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__start_ssession(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__start_ssession * SOAP_FMAC4 soap_get_ns__start_ssession(struct soap*, struct ns__start_ssession *, const char*, const char*);

#define soap_new_ns__start_ssession(soap, n) soap_instantiate_ns__start_ssession(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__start_ssession(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__start_ssession * SOAP_FMAC2 soap_instantiate_ns__start_ssession(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__start_ssession(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__start_ssessionResponse
#define SOAP_TYPE_ns__start_ssessionResponse (81)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__start_ssessionResponse(struct soap*, struct ns__start_ssessionResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__start_ssessionResponse(struct soap*, const struct ns__start_ssessionResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__start_ssessionResponse(struct soap*, const char*, int, const struct ns__start_ssessionResponse *, const char*);
SOAP_FMAC3 struct ns__start_ssessionResponse * SOAP_FMAC4 soap_in_ns__start_ssessionResponse(struct soap*, const char*, struct ns__start_ssessionResponse *, const char*);

#ifndef soap_write_ns__start_ssessionResponse
#define soap_write_ns__start_ssessionResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__start_ssessionResponse(soap, data), 0) || soap_put_ns__start_ssessionResponse(soap, data, "ns:start-ssessionResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__start_ssessionResponse(struct soap*, const struct ns__start_ssessionResponse *, const char*, const char*);

#ifndef soap_read_ns__start_ssessionResponse
#define soap_read_ns__start_ssessionResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__start_ssessionResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__start_ssessionResponse * SOAP_FMAC4 soap_get_ns__start_ssessionResponse(struct soap*, struct ns__start_ssessionResponse *, const char*, const char*);

#define soap_new_ns__start_ssessionResponse(soap, n) soap_instantiate_ns__start_ssessionResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__start_ssessionResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__start_ssessionResponse * SOAP_FMAC2 soap_instantiate_ns__start_ssessionResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__start_ssessionResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_StartSSessionResponse
#define SOAP_TYPE_StartSSessionResponse (78)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_StartSSessionResponse(struct soap*, struct StartSSessionResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_StartSSessionResponse(struct soap*, const struct StartSSessionResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_StartSSessionResponse(struct soap*, const char*, int, const struct StartSSessionResponse *, const char*);
SOAP_FMAC3 struct StartSSessionResponse * SOAP_FMAC4 soap_in_StartSSessionResponse(struct soap*, const char*, struct StartSSessionResponse *, const char*);

#ifndef soap_write_StartSSessionResponse
#define soap_write_StartSSessionResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_StartSSessionResponse(soap, data), 0) || soap_put_StartSSessionResponse(soap, data, "StartSSessionResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_StartSSessionResponse(struct soap*, const struct StartSSessionResponse *, const char*, const char*);

#ifndef soap_read_StartSSessionResponse
#define soap_read_StartSSessionResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_StartSSessionResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct StartSSessionResponse * SOAP_FMAC4 soap_get_StartSSessionResponse(struct soap*, struct StartSSessionResponse *, const char*, const char*);

#define soap_new_StartSSessionResponse(soap, n) soap_instantiate_StartSSessionResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_StartSSessionResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct StartSSessionResponse * SOAP_FMAC2 soap_instantiate_StartSSessionResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_StartSSessionResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__start_rsession
#define SOAP_TYPE_ns__start_rsession (77)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__start_rsession(struct soap*, struct ns__start_rsession *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__start_rsession(struct soap*, const struct ns__start_rsession *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__start_rsession(struct soap*, const char*, int, const struct ns__start_rsession *, const char*);
SOAP_FMAC3 struct ns__start_rsession * SOAP_FMAC4 soap_in_ns__start_rsession(struct soap*, const char*, struct ns__start_rsession *, const char*);

#ifndef soap_write_ns__start_rsession
#define soap_write_ns__start_rsession(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__start_rsession(soap, data), 0) || soap_put_ns__start_rsession(soap, data, "ns:start-rsession", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__start_rsession(struct soap*, const struct ns__start_rsession *, const char*, const char*);

#ifndef soap_read_ns__start_rsession
#define soap_read_ns__start_rsession(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__start_rsession(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__start_rsession * SOAP_FMAC4 soap_get_ns__start_rsession(struct soap*, struct ns__start_rsession *, const char*, const char*);

#define soap_new_ns__start_rsession(soap, n) soap_instantiate_ns__start_rsession(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__start_rsession(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__start_rsession * SOAP_FMAC2 soap_instantiate_ns__start_rsession(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__start_rsession(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__start_rsessionResponse
#define SOAP_TYPE_ns__start_rsessionResponse (76)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__start_rsessionResponse(struct soap*, struct ns__start_rsessionResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__start_rsessionResponse(struct soap*, const struct ns__start_rsessionResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__start_rsessionResponse(struct soap*, const char*, int, const struct ns__start_rsessionResponse *, const char*);
SOAP_FMAC3 struct ns__start_rsessionResponse * SOAP_FMAC4 soap_in_ns__start_rsessionResponse(struct soap*, const char*, struct ns__start_rsessionResponse *, const char*);

#ifndef soap_write_ns__start_rsessionResponse
#define soap_write_ns__start_rsessionResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__start_rsessionResponse(soap, data), 0) || soap_put_ns__start_rsessionResponse(soap, data, "ns:start-rsessionResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__start_rsessionResponse(struct soap*, const struct ns__start_rsessionResponse *, const char*, const char*);

#ifndef soap_read_ns__start_rsessionResponse
#define soap_read_ns__start_rsessionResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__start_rsessionResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__start_rsessionResponse * SOAP_FMAC4 soap_get_ns__start_rsessionResponse(struct soap*, struct ns__start_rsessionResponse *, const char*, const char*);

#define soap_new_ns__start_rsessionResponse(soap, n) soap_instantiate_ns__start_rsessionResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__start_rsessionResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__start_rsessionResponse * SOAP_FMAC2 soap_instantiate_ns__start_rsessionResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__start_rsessionResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_StartRSessionResponse
#define SOAP_TYPE_StartRSessionResponse (73)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_StartRSessionResponse(struct soap*, struct StartRSessionResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_StartRSessionResponse(struct soap*, const struct StartRSessionResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_StartRSessionResponse(struct soap*, const char*, int, const struct StartRSessionResponse *, const char*);
SOAP_FMAC3 struct StartRSessionResponse * SOAP_FMAC4 soap_in_StartRSessionResponse(struct soap*, const char*, struct StartRSessionResponse *, const char*);

#ifndef soap_write_StartRSessionResponse
#define soap_write_StartRSessionResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_StartRSessionResponse(soap, data), 0) || soap_put_StartRSessionResponse(soap, data, "StartRSessionResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_StartRSessionResponse(struct soap*, const struct StartRSessionResponse *, const char*, const char*);

#ifndef soap_read_StartRSessionResponse
#define soap_read_StartRSessionResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_StartRSessionResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct StartRSessionResponse * SOAP_FMAC4 soap_get_StartRSessionResponse(struct soap*, struct StartRSessionResponse *, const char*, const char*);

#define soap_new_StartRSessionResponse(soap, n) soap_instantiate_StartRSessionResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_StartRSessionResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct StartRSessionResponse * SOAP_FMAC2 soap_instantiate_StartRSessionResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_StartRSessionResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__release_UDP_time_port
#define SOAP_TYPE_ns__release_UDP_time_port (72)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__release_UDP_time_port(struct soap*, struct ns__release_UDP_time_port *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__release_UDP_time_port(struct soap*, const struct ns__release_UDP_time_port *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__release_UDP_time_port(struct soap*, const char*, int, const struct ns__release_UDP_time_port *, const char*);
SOAP_FMAC3 struct ns__release_UDP_time_port * SOAP_FMAC4 soap_in_ns__release_UDP_time_port(struct soap*, const char*, struct ns__release_UDP_time_port *, const char*);

#ifndef soap_write_ns__release_UDP_time_port
#define soap_write_ns__release_UDP_time_port(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__release_UDP_time_port(soap, data), 0) || soap_put_ns__release_UDP_time_port(soap, data, "ns:release-UDP-time-port", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__release_UDP_time_port(struct soap*, const struct ns__release_UDP_time_port *, const char*, const char*);

#ifndef soap_read_ns__release_UDP_time_port
#define soap_read_ns__release_UDP_time_port(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__release_UDP_time_port(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__release_UDP_time_port * SOAP_FMAC4 soap_get_ns__release_UDP_time_port(struct soap*, struct ns__release_UDP_time_port *, const char*, const char*);

#define soap_new_ns__release_UDP_time_port(soap, n) soap_instantiate_ns__release_UDP_time_port(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__release_UDP_time_port(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__release_UDP_time_port * SOAP_FMAC2 soap_instantiate_ns__release_UDP_time_port(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__release_UDP_time_port(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__release_UDP_time_portResponse
#define SOAP_TYPE_ns__release_UDP_time_portResponse (71)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__release_UDP_time_portResponse(struct soap*, struct ns__release_UDP_time_portResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__release_UDP_time_portResponse(struct soap*, const struct ns__release_UDP_time_portResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__release_UDP_time_portResponse(struct soap*, const char*, int, const struct ns__release_UDP_time_portResponse *, const char*);
SOAP_FMAC3 struct ns__release_UDP_time_portResponse * SOAP_FMAC4 soap_in_ns__release_UDP_time_portResponse(struct soap*, const char*, struct ns__release_UDP_time_portResponse *, const char*);

#ifndef soap_write_ns__release_UDP_time_portResponse
#define soap_write_ns__release_UDP_time_portResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__release_UDP_time_portResponse(soap, data), 0) || soap_put_ns__release_UDP_time_portResponse(soap, data, "ns:release-UDP-time-portResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__release_UDP_time_portResponse(struct soap*, const struct ns__release_UDP_time_portResponse *, const char*, const char*);

#ifndef soap_read_ns__release_UDP_time_portResponse
#define soap_read_ns__release_UDP_time_portResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__release_UDP_time_portResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__release_UDP_time_portResponse * SOAP_FMAC4 soap_get_ns__release_UDP_time_portResponse(struct soap*, struct ns__release_UDP_time_portResponse *, const char*, const char*);

#define soap_new_ns__release_UDP_time_portResponse(soap, n) soap_instantiate_ns__release_UDP_time_portResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__release_UDP_time_portResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__release_UDP_time_portResponse * SOAP_FMAC2 soap_instantiate_ns__release_UDP_time_portResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__release_UDP_time_portResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ReleaseUDPTimePortResponse
#define SOAP_TYPE_ReleaseUDPTimePortResponse (68)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ReleaseUDPTimePortResponse(struct soap*, struct ReleaseUDPTimePortResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ReleaseUDPTimePortResponse(struct soap*, const struct ReleaseUDPTimePortResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ReleaseUDPTimePortResponse(struct soap*, const char*, int, const struct ReleaseUDPTimePortResponse *, const char*);
SOAP_FMAC3 struct ReleaseUDPTimePortResponse * SOAP_FMAC4 soap_in_ReleaseUDPTimePortResponse(struct soap*, const char*, struct ReleaseUDPTimePortResponse *, const char*);

#ifndef soap_write_ReleaseUDPTimePortResponse
#define soap_write_ReleaseUDPTimePortResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ReleaseUDPTimePortResponse(soap, data), 0) || soap_put_ReleaseUDPTimePortResponse(soap, data, "ReleaseUDPTimePortResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ReleaseUDPTimePortResponse(struct soap*, const struct ReleaseUDPTimePortResponse *, const char*, const char*);

#ifndef soap_read_ReleaseUDPTimePortResponse
#define soap_read_ReleaseUDPTimePortResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ReleaseUDPTimePortResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ReleaseUDPTimePortResponse * SOAP_FMAC4 soap_get_ReleaseUDPTimePortResponse(struct soap*, struct ReleaseUDPTimePortResponse *, const char*, const char*);

#define soap_new_ReleaseUDPTimePortResponse(soap, n) soap_instantiate_ReleaseUDPTimePortResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ReleaseUDPTimePortResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ReleaseUDPTimePortResponse * SOAP_FMAC2 soap_instantiate_ReleaseUDPTimePortResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ReleaseUDPTimePortResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__start_UDP_time_port
#define SOAP_TYPE_ns__start_UDP_time_port (67)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__start_UDP_time_port(struct soap*, struct ns__start_UDP_time_port *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__start_UDP_time_port(struct soap*, const struct ns__start_UDP_time_port *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__start_UDP_time_port(struct soap*, const char*, int, const struct ns__start_UDP_time_port *, const char*);
SOAP_FMAC3 struct ns__start_UDP_time_port * SOAP_FMAC4 soap_in_ns__start_UDP_time_port(struct soap*, const char*, struct ns__start_UDP_time_port *, const char*);

#ifndef soap_write_ns__start_UDP_time_port
#define soap_write_ns__start_UDP_time_port(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__start_UDP_time_port(soap, data), 0) || soap_put_ns__start_UDP_time_port(soap, data, "ns:start-UDP-time-port", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__start_UDP_time_port(struct soap*, const struct ns__start_UDP_time_port *, const char*, const char*);

#ifndef soap_read_ns__start_UDP_time_port
#define soap_read_ns__start_UDP_time_port(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__start_UDP_time_port(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__start_UDP_time_port * SOAP_FMAC4 soap_get_ns__start_UDP_time_port(struct soap*, struct ns__start_UDP_time_port *, const char*, const char*);

#define soap_new_ns__start_UDP_time_port(soap, n) soap_instantiate_ns__start_UDP_time_port(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__start_UDP_time_port(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__start_UDP_time_port * SOAP_FMAC2 soap_instantiate_ns__start_UDP_time_port(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__start_UDP_time_port(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__start_UDP_time_portResponse
#define SOAP_TYPE_ns__start_UDP_time_portResponse (66)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__start_UDP_time_portResponse(struct soap*, struct ns__start_UDP_time_portResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__start_UDP_time_portResponse(struct soap*, const struct ns__start_UDP_time_portResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__start_UDP_time_portResponse(struct soap*, const char*, int, const struct ns__start_UDP_time_portResponse *, const char*);
SOAP_FMAC3 struct ns__start_UDP_time_portResponse * SOAP_FMAC4 soap_in_ns__start_UDP_time_portResponse(struct soap*, const char*, struct ns__start_UDP_time_portResponse *, const char*);

#ifndef soap_write_ns__start_UDP_time_portResponse
#define soap_write_ns__start_UDP_time_portResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__start_UDP_time_portResponse(soap, data), 0) || soap_put_ns__start_UDP_time_portResponse(soap, data, "ns:start-UDP-time-portResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__start_UDP_time_portResponse(struct soap*, const struct ns__start_UDP_time_portResponse *, const char*, const char*);

#ifndef soap_read_ns__start_UDP_time_portResponse
#define soap_read_ns__start_UDP_time_portResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__start_UDP_time_portResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__start_UDP_time_portResponse * SOAP_FMAC4 soap_get_ns__start_UDP_time_portResponse(struct soap*, struct ns__start_UDP_time_portResponse *, const char*, const char*);

#define soap_new_ns__start_UDP_time_portResponse(soap, n) soap_instantiate_ns__start_UDP_time_portResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__start_UDP_time_portResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__start_UDP_time_portResponse * SOAP_FMAC2 soap_instantiate_ns__start_UDP_time_portResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__start_UDP_time_portResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__get_time_by_gsoap
#define SOAP_TYPE_ns__get_time_by_gsoap (64)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__get_time_by_gsoap(struct soap*, struct ns__get_time_by_gsoap *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__get_time_by_gsoap(struct soap*, const struct ns__get_time_by_gsoap *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__get_time_by_gsoap(struct soap*, const char*, int, const struct ns__get_time_by_gsoap *, const char*);
SOAP_FMAC3 struct ns__get_time_by_gsoap * SOAP_FMAC4 soap_in_ns__get_time_by_gsoap(struct soap*, const char*, struct ns__get_time_by_gsoap *, const char*);

#ifndef soap_write_ns__get_time_by_gsoap
#define soap_write_ns__get_time_by_gsoap(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__get_time_by_gsoap(soap, data), 0) || soap_put_ns__get_time_by_gsoap(soap, data, "ns:get-time-by-gsoap", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__get_time_by_gsoap(struct soap*, const struct ns__get_time_by_gsoap *, const char*, const char*);

#ifndef soap_read_ns__get_time_by_gsoap
#define soap_read_ns__get_time_by_gsoap(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__get_time_by_gsoap(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__get_time_by_gsoap * SOAP_FMAC4 soap_get_ns__get_time_by_gsoap(struct soap*, struct ns__get_time_by_gsoap *, const char*, const char*);

#define soap_new_ns__get_time_by_gsoap(soap, n) soap_instantiate_ns__get_time_by_gsoap(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__get_time_by_gsoap(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__get_time_by_gsoap * SOAP_FMAC2 soap_instantiate_ns__get_time_by_gsoap(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__get_time_by_gsoap(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__get_time_by_gsoapResponse
#define SOAP_TYPE_ns__get_time_by_gsoapResponse (63)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__get_time_by_gsoapResponse(struct soap*, struct ns__get_time_by_gsoapResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__get_time_by_gsoapResponse(struct soap*, const struct ns__get_time_by_gsoapResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__get_time_by_gsoapResponse(struct soap*, const char*, int, const struct ns__get_time_by_gsoapResponse *, const char*);
SOAP_FMAC3 struct ns__get_time_by_gsoapResponse * SOAP_FMAC4 soap_in_ns__get_time_by_gsoapResponse(struct soap*, const char*, struct ns__get_time_by_gsoapResponse *, const char*);

#ifndef soap_write_ns__get_time_by_gsoapResponse
#define soap_write_ns__get_time_by_gsoapResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__get_time_by_gsoapResponse(soap, data), 0) || soap_put_ns__get_time_by_gsoapResponse(soap, data, "ns:get-time-by-gsoapResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__get_time_by_gsoapResponse(struct soap*, const struct ns__get_time_by_gsoapResponse *, const char*, const char*);

#ifndef soap_read_ns__get_time_by_gsoapResponse
#define soap_read_ns__get_time_by_gsoapResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__get_time_by_gsoapResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__get_time_by_gsoapResponse * SOAP_FMAC4 soap_get_ns__get_time_by_gsoapResponse(struct soap*, struct ns__get_time_by_gsoapResponse *, const char*, const char*);

#define soap_new_ns__get_time_by_gsoapResponse(soap, n) soap_instantiate_ns__get_time_by_gsoapResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__get_time_by_gsoapResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__get_time_by_gsoapResponse * SOAP_FMAC2 soap_instantiate_ns__get_time_by_gsoapResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__get_time_by_gsoapResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__finish_session
#define SOAP_TYPE_ns__finish_session (60)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__finish_session(struct soap*, struct ns__finish_session *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__finish_session(struct soap*, const struct ns__finish_session *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__finish_session(struct soap*, const char*, int, const struct ns__finish_session *, const char*);
SOAP_FMAC3 struct ns__finish_session * SOAP_FMAC4 soap_in_ns__finish_session(struct soap*, const char*, struct ns__finish_session *, const char*);

#ifndef soap_write_ns__finish_session
#define soap_write_ns__finish_session(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__finish_session(soap, data), 0) || soap_put_ns__finish_session(soap, data, "ns:finish-session", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__finish_session(struct soap*, const struct ns__finish_session *, const char*, const char*);

#ifndef soap_read_ns__finish_session
#define soap_read_ns__finish_session(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__finish_session(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__finish_session * SOAP_FMAC4 soap_get_ns__finish_session(struct soap*, struct ns__finish_session *, const char*, const char*);

#define soap_new_ns__finish_session(soap, n) soap_instantiate_ns__finish_session(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__finish_session(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__finish_session * SOAP_FMAC2 soap_instantiate_ns__finish_session(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__finish_session(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__finish_sessionResponse
#define SOAP_TYPE_ns__finish_sessionResponse (59)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__finish_sessionResponse(struct soap*, struct ns__finish_sessionResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__finish_sessionResponse(struct soap*, const struct ns__finish_sessionResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__finish_sessionResponse(struct soap*, const char*, int, const struct ns__finish_sessionResponse *, const char*);
SOAP_FMAC3 struct ns__finish_sessionResponse * SOAP_FMAC4 soap_in_ns__finish_sessionResponse(struct soap*, const char*, struct ns__finish_sessionResponse *, const char*);

#ifndef soap_write_ns__finish_sessionResponse
#define soap_write_ns__finish_sessionResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__finish_sessionResponse(soap, data), 0) || soap_put_ns__finish_sessionResponse(soap, data, "ns:finish-sessionResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__finish_sessionResponse(struct soap*, const struct ns__finish_sessionResponse *, const char*, const char*);

#ifndef soap_read_ns__finish_sessionResponse
#define soap_read_ns__finish_sessionResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__finish_sessionResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__finish_sessionResponse * SOAP_FMAC4 soap_get_ns__finish_sessionResponse(struct soap*, struct ns__finish_sessionResponse *, const char*, const char*);

#define soap_new_ns__finish_sessionResponse(soap, n) soap_instantiate_ns__finish_sessionResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__finish_sessionResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__finish_sessionResponse * SOAP_FMAC2 soap_instantiate_ns__finish_sessionResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__finish_sessionResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_FinishSessionResponse
#define SOAP_TYPE_FinishSessionResponse (56)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_FinishSessionResponse(struct soap*, struct FinishSessionResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_FinishSessionResponse(struct soap*, const struct FinishSessionResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_FinishSessionResponse(struct soap*, const char*, int, const struct FinishSessionResponse *, const char*);
SOAP_FMAC3 struct FinishSessionResponse * SOAP_FMAC4 soap_in_FinishSessionResponse(struct soap*, const char*, struct FinishSessionResponse *, const char*);

#ifndef soap_write_FinishSessionResponse
#define soap_write_FinishSessionResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_FinishSessionResponse(soap, data), 0) || soap_put_FinishSessionResponse(soap, data, "FinishSessionResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_FinishSessionResponse(struct soap*, const struct FinishSessionResponse *, const char*, const char*);

#ifndef soap_read_FinishSessionResponse
#define soap_read_FinishSessionResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_FinishSessionResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct FinishSessionResponse * SOAP_FMAC4 soap_get_FinishSessionResponse(struct soap*, struct FinishSessionResponse *, const char*, const char*);

#define soap_new_FinishSessionResponse(soap, n) soap_instantiate_FinishSessionResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_FinishSessionResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct FinishSessionResponse * SOAP_FMAC2 soap_instantiate_FinishSessionResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_FinishSessionResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__get_samples
#define SOAP_TYPE_ns__get_samples (55)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__get_samples(struct soap*, struct ns__get_samples *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__get_samples(struct soap*, const struct ns__get_samples *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__get_samples(struct soap*, const char*, int, const struct ns__get_samples *, const char*);
SOAP_FMAC3 struct ns__get_samples * SOAP_FMAC4 soap_in_ns__get_samples(struct soap*, const char*, struct ns__get_samples *, const char*);

#ifndef soap_write_ns__get_samples
#define soap_write_ns__get_samples(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__get_samples(soap, data), 0) || soap_put_ns__get_samples(soap, data, "ns:get-samples", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__get_samples(struct soap*, const struct ns__get_samples *, const char*, const char*);

#ifndef soap_read_ns__get_samples
#define soap_read_ns__get_samples(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__get_samples(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__get_samples * SOAP_FMAC4 soap_get_ns__get_samples(struct soap*, struct ns__get_samples *, const char*, const char*);

#define soap_new_ns__get_samples(soap, n) soap_instantiate_ns__get_samples(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__get_samples(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__get_samples * SOAP_FMAC2 soap_instantiate_ns__get_samples(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__get_samples(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__get_samplesResponse
#define SOAP_TYPE_ns__get_samplesResponse (54)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__get_samplesResponse(struct soap*, struct ns__get_samplesResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__get_samplesResponse(struct soap*, const struct ns__get_samplesResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__get_samplesResponse(struct soap*, const char*, int, const struct ns__get_samplesResponse *, const char*);
SOAP_FMAC3 struct ns__get_samplesResponse * SOAP_FMAC4 soap_in_ns__get_samplesResponse(struct soap*, const char*, struct ns__get_samplesResponse *, const char*);

#ifndef soap_write_ns__get_samplesResponse
#define soap_write_ns__get_samplesResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__get_samplesResponse(soap, data), 0) || soap_put_ns__get_samplesResponse(soap, data, "ns:get-samplesResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__get_samplesResponse(struct soap*, const struct ns__get_samplesResponse *, const char*, const char*);

#ifndef soap_read_ns__get_samplesResponse
#define soap_read_ns__get_samplesResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__get_samplesResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__get_samplesResponse * SOAP_FMAC4 soap_get_ns__get_samplesResponse(struct soap*, struct ns__get_samplesResponse *, const char*, const char*);

#define soap_new_ns__get_samplesResponse(soap, n) soap_instantiate_ns__get_samplesResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__get_samplesResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__get_samplesResponse * SOAP_FMAC2 soap_instantiate_ns__get_samplesResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__get_samplesResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__getBasicSourceStats
#define SOAP_TYPE_ns__getBasicSourceStats (50)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__getBasicSourceStats(struct soap*, struct ns__getBasicSourceStats *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__getBasicSourceStats(struct soap*, const struct ns__getBasicSourceStats *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__getBasicSourceStats(struct soap*, const char*, int, const struct ns__getBasicSourceStats *, const char*);
SOAP_FMAC3 struct ns__getBasicSourceStats * SOAP_FMAC4 soap_in_ns__getBasicSourceStats(struct soap*, const char*, struct ns__getBasicSourceStats *, const char*);

#ifndef soap_write_ns__getBasicSourceStats
#define soap_write_ns__getBasicSourceStats(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__getBasicSourceStats(soap, data), 0) || soap_put_ns__getBasicSourceStats(soap, data, "ns:getBasicSourceStats", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__getBasicSourceStats(struct soap*, const struct ns__getBasicSourceStats *, const char*, const char*);

#ifndef soap_read_ns__getBasicSourceStats
#define soap_read_ns__getBasicSourceStats(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__getBasicSourceStats(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__getBasicSourceStats * SOAP_FMAC4 soap_get_ns__getBasicSourceStats(struct soap*, struct ns__getBasicSourceStats *, const char*, const char*);

#define soap_new_ns__getBasicSourceStats(soap, n) soap_instantiate_ns__getBasicSourceStats(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__getBasicSourceStats(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__getBasicSourceStats * SOAP_FMAC2 soap_instantiate_ns__getBasicSourceStats(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__getBasicSourceStats(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__getBasicSourceStatsResponse
#define SOAP_TYPE_ns__getBasicSourceStatsResponse (49)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__getBasicSourceStatsResponse(struct soap*, struct ns__getBasicSourceStatsResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__getBasicSourceStatsResponse(struct soap*, const struct ns__getBasicSourceStatsResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__getBasicSourceStatsResponse(struct soap*, const char*, int, const struct ns__getBasicSourceStatsResponse *, const char*);
SOAP_FMAC3 struct ns__getBasicSourceStatsResponse * SOAP_FMAC4 soap_in_ns__getBasicSourceStatsResponse(struct soap*, const char*, struct ns__getBasicSourceStatsResponse *, const char*);

#ifndef soap_write_ns__getBasicSourceStatsResponse
#define soap_write_ns__getBasicSourceStatsResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__getBasicSourceStatsResponse(soap, data), 0) || soap_put_ns__getBasicSourceStatsResponse(soap, data, "ns:getBasicSourceStatsResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__getBasicSourceStatsResponse(struct soap*, const struct ns__getBasicSourceStatsResponse *, const char*, const char*);

#ifndef soap_read_ns__getBasicSourceStatsResponse
#define soap_read_ns__getBasicSourceStatsResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__getBasicSourceStatsResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__getBasicSourceStatsResponse * SOAP_FMAC4 soap_get_ns__getBasicSourceStatsResponse(struct soap*, struct ns__getBasicSourceStatsResponse *, const char*, const char*);

#define soap_new_ns__getBasicSourceStatsResponse(soap, n) soap_instantiate_ns__getBasicSourceStatsResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__getBasicSourceStatsResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__getBasicSourceStatsResponse * SOAP_FMAC2 soap_instantiate_ns__getBasicSourceStatsResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__getBasicSourceStatsResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__get_samples_whole
#define SOAP_TYPE_ns__get_samples_whole (46)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__get_samples_whole(struct soap*, struct ns__get_samples_whole *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__get_samples_whole(struct soap*, const struct ns__get_samples_whole *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__get_samples_whole(struct soap*, const char*, int, const struct ns__get_samples_whole *, const char*);
SOAP_FMAC3 struct ns__get_samples_whole * SOAP_FMAC4 soap_in_ns__get_samples_whole(struct soap*, const char*, struct ns__get_samples_whole *, const char*);

#ifndef soap_write_ns__get_samples_whole
#define soap_write_ns__get_samples_whole(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__get_samples_whole(soap, data), 0) || soap_put_ns__get_samples_whole(soap, data, "ns:get-samples-whole", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__get_samples_whole(struct soap*, const struct ns__get_samples_whole *, const char*, const char*);

#ifndef soap_read_ns__get_samples_whole
#define soap_read_ns__get_samples_whole(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__get_samples_whole(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__get_samples_whole * SOAP_FMAC4 soap_get_ns__get_samples_whole(struct soap*, struct ns__get_samples_whole *, const char*, const char*);

#define soap_new_ns__get_samples_whole(soap, n) soap_instantiate_ns__get_samples_whole(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__get_samples_whole(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__get_samples_whole * SOAP_FMAC2 soap_instantiate_ns__get_samples_whole(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__get_samples_whole(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__get_samples_wholeResponse
#define SOAP_TYPE_ns__get_samples_wholeResponse (45)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__get_samples_wholeResponse(struct soap*, struct ns__get_samples_wholeResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__get_samples_wholeResponse(struct soap*, const struct ns__get_samples_wholeResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__get_samples_wholeResponse(struct soap*, const char*, int, const struct ns__get_samples_wholeResponse *, const char*);
SOAP_FMAC3 struct ns__get_samples_wholeResponse * SOAP_FMAC4 soap_in_ns__get_samples_wholeResponse(struct soap*, const char*, struct ns__get_samples_wholeResponse *, const char*);

#ifndef soap_write_ns__get_samples_wholeResponse
#define soap_write_ns__get_samples_wholeResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__get_samples_wholeResponse(soap, data), 0) || soap_put_ns__get_samples_wholeResponse(soap, data, "ns:get-samples-wholeResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__get_samples_wholeResponse(struct soap*, const struct ns__get_samples_wholeResponse *, const char*, const char*);

#ifndef soap_read_ns__get_samples_wholeResponse
#define soap_read_ns__get_samples_wholeResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__get_samples_wholeResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__get_samples_wholeResponse * SOAP_FMAC4 soap_get_ns__get_samples_wholeResponse(struct soap*, struct ns__get_samples_wholeResponse *, const char*, const char*);

#define soap_new_ns__get_samples_wholeResponse(soap, n) soap_instantiate_ns__get_samples_wholeResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__get_samples_wholeResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__get_samples_wholeResponse * SOAP_FMAC2 soap_instantiate_ns__get_samples_wholeResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__get_samples_wholeResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__release_rsession
#define SOAP_TYPE_ns__release_rsession (41)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__release_rsession(struct soap*, struct ns__release_rsession *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__release_rsession(struct soap*, const struct ns__release_rsession *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__release_rsession(struct soap*, const char*, int, const struct ns__release_rsession *, const char*);
SOAP_FMAC3 struct ns__release_rsession * SOAP_FMAC4 soap_in_ns__release_rsession(struct soap*, const char*, struct ns__release_rsession *, const char*);

#ifndef soap_write_ns__release_rsession
#define soap_write_ns__release_rsession(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__release_rsession(soap, data), 0) || soap_put_ns__release_rsession(soap, data, "ns:release-rsession", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__release_rsession(struct soap*, const struct ns__release_rsession *, const char*, const char*);

#ifndef soap_read_ns__release_rsession
#define soap_read_ns__release_rsession(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__release_rsession(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__release_rsession * SOAP_FMAC4 soap_get_ns__release_rsession(struct soap*, struct ns__release_rsession *, const char*, const char*);

#define soap_new_ns__release_rsession(soap, n) soap_instantiate_ns__release_rsession(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__release_rsession(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__release_rsession * SOAP_FMAC2 soap_instantiate_ns__release_rsession(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__release_rsession(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__release_rsessionResponse
#define SOAP_TYPE_ns__release_rsessionResponse (40)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__release_rsessionResponse(struct soap*, struct ns__release_rsessionResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__release_rsessionResponse(struct soap*, const struct ns__release_rsessionResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__release_rsessionResponse(struct soap*, const char*, int, const struct ns__release_rsessionResponse *, const char*);
SOAP_FMAC3 struct ns__release_rsessionResponse * SOAP_FMAC4 soap_in_ns__release_rsessionResponse(struct soap*, const char*, struct ns__release_rsessionResponse *, const char*);

#ifndef soap_write_ns__release_rsessionResponse
#define soap_write_ns__release_rsessionResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__release_rsessionResponse(soap, data), 0) || soap_put_ns__release_rsessionResponse(soap, data, "ns:release-rsessionResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__release_rsessionResponse(struct soap*, const struct ns__release_rsessionResponse *, const char*, const char*);

#ifndef soap_read_ns__release_rsessionResponse
#define soap_read_ns__release_rsessionResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__release_rsessionResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__release_rsessionResponse * SOAP_FMAC4 soap_get_ns__release_rsessionResponse(struct soap*, struct ns__release_rsessionResponse *, const char*, const char*);

#define soap_new_ns__release_rsessionResponse(soap, n) soap_instantiate_ns__release_rsessionResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__release_rsessionResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__release_rsessionResponse * SOAP_FMAC2 soap_instantiate_ns__release_rsessionResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__release_rsessionResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ReleaseRSessionResponse
#define SOAP_TYPE_ReleaseRSessionResponse (37)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ReleaseRSessionResponse(struct soap*, struct ReleaseRSessionResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ReleaseRSessionResponse(struct soap*, const struct ReleaseRSessionResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ReleaseRSessionResponse(struct soap*, const char*, int, const struct ReleaseRSessionResponse *, const char*);
SOAP_FMAC3 struct ReleaseRSessionResponse * SOAP_FMAC4 soap_in_ReleaseRSessionResponse(struct soap*, const char*, struct ReleaseRSessionResponse *, const char*);

#ifndef soap_write_ReleaseRSessionResponse
#define soap_write_ReleaseRSessionResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ReleaseRSessionResponse(soap, data), 0) || soap_put_ReleaseRSessionResponse(soap, data, "ReleaseRSessionResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ReleaseRSessionResponse(struct soap*, const struct ReleaseRSessionResponse *, const char*, const char*);

#ifndef soap_read_ReleaseRSessionResponse
#define soap_read_ReleaseRSessionResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ReleaseRSessionResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ReleaseRSessionResponse * SOAP_FMAC4 soap_get_ReleaseRSessionResponse(struct soap*, struct ReleaseRSessionResponse *, const char*, const char*);

#define soap_new_ReleaseRSessionResponse(soap, n) soap_instantiate_ReleaseRSessionResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ReleaseRSessionResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ReleaseRSessionResponse * SOAP_FMAC2 soap_instantiate_ReleaseRSessionResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ReleaseRSessionResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__release_ssession
#define SOAP_TYPE_ns__release_ssession (36)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__release_ssession(struct soap*, struct ns__release_ssession *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__release_ssession(struct soap*, const struct ns__release_ssession *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__release_ssession(struct soap*, const char*, int, const struct ns__release_ssession *, const char*);
SOAP_FMAC3 struct ns__release_ssession * SOAP_FMAC4 soap_in_ns__release_ssession(struct soap*, const char*, struct ns__release_ssession *, const char*);

#ifndef soap_write_ns__release_ssession
#define soap_write_ns__release_ssession(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__release_ssession(soap, data), 0) || soap_put_ns__release_ssession(soap, data, "ns:release-ssession", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__release_ssession(struct soap*, const struct ns__release_ssession *, const char*, const char*);

#ifndef soap_read_ns__release_ssession
#define soap_read_ns__release_ssession(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__release_ssession(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__release_ssession * SOAP_FMAC4 soap_get_ns__release_ssession(struct soap*, struct ns__release_ssession *, const char*, const char*);

#define soap_new_ns__release_ssession(soap, n) soap_instantiate_ns__release_ssession(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__release_ssession(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__release_ssession * SOAP_FMAC2 soap_instantiate_ns__release_ssession(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__release_ssession(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__release_ssessionResponse
#define SOAP_TYPE_ns__release_ssessionResponse (35)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__release_ssessionResponse(struct soap*, struct ns__release_ssessionResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__release_ssessionResponse(struct soap*, const struct ns__release_ssessionResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__release_ssessionResponse(struct soap*, const char*, int, const struct ns__release_ssessionResponse *, const char*);
SOAP_FMAC3 struct ns__release_ssessionResponse * SOAP_FMAC4 soap_in_ns__release_ssessionResponse(struct soap*, const char*, struct ns__release_ssessionResponse *, const char*);

#ifndef soap_write_ns__release_ssessionResponse
#define soap_write_ns__release_ssessionResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__release_ssessionResponse(soap, data), 0) || soap_put_ns__release_ssessionResponse(soap, data, "ns:release-ssessionResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__release_ssessionResponse(struct soap*, const struct ns__release_ssessionResponse *, const char*, const char*);

#ifndef soap_read_ns__release_ssessionResponse
#define soap_read_ns__release_ssessionResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__release_ssessionResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__release_ssessionResponse * SOAP_FMAC4 soap_get_ns__release_ssessionResponse(struct soap*, struct ns__release_ssessionResponse *, const char*, const char*);

#define soap_new_ns__release_ssessionResponse(soap, n) soap_instantiate_ns__release_ssessionResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__release_ssessionResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__release_ssessionResponse * SOAP_FMAC2 soap_instantiate_ns__release_ssessionResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__release_ssessionResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ReleaseSSessionResponse
#define SOAP_TYPE_ReleaseSSessionResponse (32)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ReleaseSSessionResponse(struct soap*, struct ReleaseSSessionResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ReleaseSSessionResponse(struct soap*, const struct ReleaseSSessionResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ReleaseSSessionResponse(struct soap*, const char*, int, const struct ReleaseSSessionResponse *, const char*);
SOAP_FMAC3 struct ReleaseSSessionResponse * SOAP_FMAC4 soap_in_ReleaseSSessionResponse(struct soap*, const char*, struct ReleaseSSessionResponse *, const char*);

#ifndef soap_write_ReleaseSSessionResponse
#define soap_write_ReleaseSSessionResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ReleaseSSessionResponse(soap, data), 0) || soap_put_ReleaseSSessionResponse(soap, data, "ReleaseSSessionResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ReleaseSSessionResponse(struct soap*, const struct ReleaseSSessionResponse *, const char*, const char*);

#ifndef soap_read_ReleaseSSessionResponse
#define soap_read_ReleaseSSessionResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ReleaseSSessionResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ReleaseSSessionResponse * SOAP_FMAC4 soap_get_ReleaseSSessionResponse(struct soap*, struct ReleaseSSessionResponse *, const char*, const char*);

#define soap_new_ReleaseSSessionResponse(soap, n) soap_instantiate_ReleaseSSessionResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ReleaseSSessionResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ReleaseSSessionResponse * SOAP_FMAC2 soap_instantiate_ReleaseSSessionResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ReleaseSSessionResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__Port
#define SOAP_TYPE_ns__Port (31)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__Port(struct soap*, struct ns__Port *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__Port(struct soap*, const struct ns__Port *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__Port(struct soap*, const char*, int, const struct ns__Port *, const char*);
SOAP_FMAC3 struct ns__Port * SOAP_FMAC4 soap_in_ns__Port(struct soap*, const char*, struct ns__Port *, const char*);

#ifndef soap_write_ns__Port
#define soap_write_ns__Port(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__Port(soap, data), 0) || soap_put_ns__Port(soap, data, "ns:Port", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__Port(struct soap*, const struct ns__Port *, const char*, const char*);

#ifndef soap_read_ns__Port
#define soap_read_ns__Port(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__Port(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__Port * SOAP_FMAC4 soap_get_ns__Port(struct soap*, struct ns__Port *, const char*, const char*);

#define soap_new_ns__Port(soap, n) soap_instantiate_ns__Port(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__Port(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__Port * SOAP_FMAC2 soap_instantiate_ns__Port(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__Port(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__PortResponse
#define SOAP_TYPE_ns__PortResponse (30)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__PortResponse(struct soap*, struct ns__PortResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__PortResponse(struct soap*, const struct ns__PortResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__PortResponse(struct soap*, const char*, int, const struct ns__PortResponse *, const char*);
SOAP_FMAC3 struct ns__PortResponse * SOAP_FMAC4 soap_in_ns__PortResponse(struct soap*, const char*, struct ns__PortResponse *, const char*);

#ifndef soap_write_ns__PortResponse
#define soap_write_ns__PortResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__PortResponse(soap, data), 0) || soap_put_ns__PortResponse(soap, data, "ns:PortResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__PortResponse(struct soap*, const struct ns__PortResponse *, const char*, const char*);

#ifndef soap_read_ns__PortResponse
#define soap_read_ns__PortResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__PortResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__PortResponse * SOAP_FMAC4 soap_get_ns__PortResponse(struct soap*, struct ns__PortResponse *, const char*, const char*);

#define soap_new_ns__PortResponse(soap, n) soap_instantiate_ns__PortResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__PortResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__PortResponse * SOAP_FMAC2 soap_instantiate_ns__PortResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__PortResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_BasicSourceStats_t
#define SOAP_TYPE_BasicSourceStats_t (26)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_BasicSourceStats_t(struct soap*, struct BasicSourceStats_t *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_BasicSourceStats_t(struct soap*, const struct BasicSourceStats_t *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_BasicSourceStats_t(struct soap*, const char*, int, const struct BasicSourceStats_t *, const char*);
SOAP_FMAC3 struct BasicSourceStats_t * SOAP_FMAC4 soap_in_BasicSourceStats_t(struct soap*, const char*, struct BasicSourceStats_t *, const char*);

#ifndef soap_write_BasicSourceStats_t
#define soap_write_BasicSourceStats_t(soap, data) ( soap_begin_send(soap) || (soap_serialize_BasicSourceStats_t(soap, data), 0) || soap_put_BasicSourceStats_t(soap, data, "BasicSourceStats-t", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_BasicSourceStats_t(struct soap*, const struct BasicSourceStats_t *, const char*, const char*);

#ifndef soap_read_BasicSourceStats_t
#define soap_read_BasicSourceStats_t(soap, data) ( soap_begin_recv(soap) || !soap_get_BasicSourceStats_t(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct BasicSourceStats_t * SOAP_FMAC4 soap_get_BasicSourceStats_t(struct soap*, struct BasicSourceStats_t *, const char*, const char*);

#define soap_new_BasicSourceStats_t(soap, n) soap_instantiate_BasicSourceStats_t(soap, n, NULL, NULL, NULL)


#define soap_delete_BasicSourceStats_t(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct BasicSourceStats_t * SOAP_FMAC2 soap_instantiate_BasicSourceStats_t(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_BasicSourceStats_t(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_senderDesc_t
#define SOAP_TYPE_senderDesc_t (22)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_senderDesc_t(struct soap*, struct senderDesc_t *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_senderDesc_t(struct soap*, const struct senderDesc_t *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_senderDesc_t(struct soap*, const char*, int, const struct senderDesc_t *, const char*);
SOAP_FMAC3 struct senderDesc_t * SOAP_FMAC4 soap_in_senderDesc_t(struct soap*, const char*, struct senderDesc_t *, const char*);

#ifndef soap_write_senderDesc_t
#define soap_write_senderDesc_t(soap, data) ( soap_begin_send(soap) || (soap_serialize_senderDesc_t(soap, data), 0) || soap_put_senderDesc_t(soap, data, "senderDesc-t", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_senderDesc_t(struct soap*, const struct senderDesc_t *, const char*, const char*);

#ifndef soap_read_senderDesc_t
#define soap_read_senderDesc_t(soap, data) ( soap_begin_recv(soap) || !soap_get_senderDesc_t(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct senderDesc_t * SOAP_FMAC4 soap_get_senderDesc_t(struct soap*, struct senderDesc_t *, const char*, const char*);

#define soap_new_senderDesc_t(soap, n) soap_instantiate_senderDesc_t(soap, n, NULL, NULL, NULL)


#define soap_delete_senderDesc_t(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct senderDesc_t * SOAP_FMAC2 soap_instantiate_senderDesc_t(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_senderDesc_t(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_sourceDesc_t
#define SOAP_TYPE_sourceDesc_t (18)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_sourceDesc_t(struct soap*, struct sourceDesc_t *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_sourceDesc_t(struct soap*, const struct sourceDesc_t *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_sourceDesc_t(struct soap*, const char*, int, const struct sourceDesc_t *, const char*);
SOAP_FMAC3 struct sourceDesc_t * SOAP_FMAC4 soap_in_sourceDesc_t(struct soap*, const char*, struct sourceDesc_t *, const char*);

#ifndef soap_write_sourceDesc_t
#define soap_write_sourceDesc_t(soap, data) ( soap_begin_send(soap) || (soap_serialize_sourceDesc_t(soap, data), 0) || soap_put_sourceDesc_t(soap, data, "sourceDesc-t", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_sourceDesc_t(struct soap*, const struct sourceDesc_t *, const char*, const char*);

#ifndef soap_read_sourceDesc_t
#define soap_read_sourceDesc_t(soap, data) ( soap_begin_recv(soap) || !soap_get_sourceDesc_t(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct sourceDesc_t * SOAP_FMAC4 soap_get_sourceDesc_t(struct soap*, struct sourceDesc_t *, const char*, const char*);

#define soap_new_sourceDesc_t(soap, n) soap_instantiate_sourceDesc_t(soap, n, NULL, NULL, NULL)


#define soap_delete_sourceDesc_t(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct sourceDesc_t * SOAP_FMAC2 soap_instantiate_sourceDesc_t(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_sourceDesc_t(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_whole_sample_t
#define SOAP_TYPE_whole_sample_t (14)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_whole_sample_t(struct soap*, struct whole_sample_t *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_whole_sample_t(struct soap*, const struct whole_sample_t *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_whole_sample_t(struct soap*, const char*, int, const struct whole_sample_t *, const char*);
SOAP_FMAC3 struct whole_sample_t * SOAP_FMAC4 soap_in_whole_sample_t(struct soap*, const char*, struct whole_sample_t *, const char*);

#ifndef soap_write_whole_sample_t
#define soap_write_whole_sample_t(soap, data) ( soap_begin_send(soap) || (soap_serialize_whole_sample_t(soap, data), 0) || soap_put_whole_sample_t(soap, data, "whole-sample-t", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_whole_sample_t(struct soap*, const struct whole_sample_t *, const char*, const char*);

#ifndef soap_read_whole_sample_t
#define soap_read_whole_sample_t(soap, data) ( soap_begin_recv(soap) || !soap_get_whole_sample_t(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct whole_sample_t * SOAP_FMAC4 soap_get_whole_sample_t(struct soap*, struct whole_sample_t *, const char*, const char*);

#define soap_new_whole_sample_t(soap, n) soap_instantiate_whole_sample_t(soap, n, NULL, NULL, NULL)


#define soap_delete_whole_sample_t(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct whole_sample_t * SOAP_FMAC2 soap_instantiate_whole_sample_t(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_whole_sample_t(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_sock_opt_t
#define SOAP_TYPE_sock_opt_t (12)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_sock_opt_t(struct soap*, struct sock_opt_t *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_sock_opt_t(struct soap*, const struct sock_opt_t *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_sock_opt_t(struct soap*, const char*, int, const struct sock_opt_t *, const char*);
SOAP_FMAC3 struct sock_opt_t * SOAP_FMAC4 soap_in_sock_opt_t(struct soap*, const char*, struct sock_opt_t *, const char*);

#ifndef soap_write_sock_opt_t
#define soap_write_sock_opt_t(soap, data) ( soap_begin_send(soap) || (soap_serialize_sock_opt_t(soap, data), 0) || soap_put_sock_opt_t(soap, data, "sock-opt-t", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_sock_opt_t(struct soap*, const struct sock_opt_t *, const char*, const char*);

#ifndef soap_read_sock_opt_t
#define soap_read_sock_opt_t(soap, data) ( soap_begin_recv(soap) || !soap_get_sock_opt_t(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct sock_opt_t * SOAP_FMAC4 soap_get_sock_opt_t(struct soap*, struct sock_opt_t *, const char*, const char*);

#define soap_new_sock_opt_t(soap, n) soap_instantiate_sock_opt_t(soap, n, NULL, NULL, NULL)


#define soap_delete_sock_opt_t(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct sock_opt_t * SOAP_FMAC2 soap_instantiate_sock_opt_t(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_sock_opt_t(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_sample_t
#define SOAP_TYPE_sample_t (10)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_sample_t(struct soap*, struct sample_t *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_sample_t(struct soap*, const struct sample_t *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_sample_t(struct soap*, const char*, int, const struct sample_t *, const char*);
SOAP_FMAC3 struct sample_t * SOAP_FMAC4 soap_in_sample_t(struct soap*, const char*, struct sample_t *, const char*);

#ifndef soap_write_sample_t
#define soap_write_sample_t(soap, data) ( soap_begin_send(soap) || (soap_serialize_sample_t(soap, data), 0) || soap_put_sample_t(soap, data, "sample-t", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_sample_t(struct soap*, const struct sample_t *, const char*, const char*);

#ifndef soap_read_sample_t
#define soap_read_sample_t(soap, data) ( soap_begin_recv(soap) || !soap_get_sample_t(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct sample_t * SOAP_FMAC4 soap_get_sample_t(struct soap*, struct sample_t *, const char*, const char*);

#define soap_new_sample_t(soap, n) soap_instantiate_sample_t(soap, n, NULL, NULL, NULL)


#define soap_delete_sample_t(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct sample_t * SOAP_FMAC2 soap_instantiate_sample_t(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_sample_t(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tv_type
#define SOAP_TYPE_tv_type (8)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tv_type(struct soap*, struct tv_type *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tv_type(struct soap*, const struct tv_type *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tv_type(struct soap*, const char*, int, const struct tv_type *, const char*);
SOAP_FMAC3 struct tv_type * SOAP_FMAC4 soap_in_tv_type(struct soap*, const char*, struct tv_type *, const char*);

#ifndef soap_write_tv_type
#define soap_write_tv_type(soap, data) ( soap_begin_send(soap) || (soap_serialize_tv_type(soap, data), 0) || soap_put_tv_type(soap, data, "tv-type", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_tv_type(struct soap*, const struct tv_type *, const char*, const char*);

#ifndef soap_read_tv_type
#define soap_read_tv_type(soap, data) ( soap_begin_recv(soap) || !soap_get_tv_type(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct tv_type * SOAP_FMAC4 soap_get_tv_type(struct soap*, struct tv_type *, const char*, const char*);

#define soap_new_tv_type(soap, n) soap_instantiate_tv_type(soap, n, NULL, NULL, NULL)


#define soap_delete_tv_type(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct tv_type * SOAP_FMAC2 soap_instantiate_tv_type(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tv_type(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (101)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Reason
#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Reason(soap, data), 0) || soap_put_PointerToSOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Reason
#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (100)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Detail
#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Detail(soap, data), 0) || soap_put_PointerToSOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Detail
#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (94)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Code
#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Code(soap, data), 0) || soap_put_PointerToSOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Code
#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#endif

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)


#define soap_serialize__QName(soap, a) soap_serialize_string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_begin_send(soap) || (soap_serialize__QName(soap, data), 0) || soap_put__QName(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_begin_send(soap) || (soap_serialize_string(soap, data), 0) || soap_put_string(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE_Array24Ofbyte
#define SOAP_TYPE_Array24Ofbyte (15)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_Array24Ofbyte(struct soap*, char[24]);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_Array24Ofbyte(struct soap*, char const[24]);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_Array24Ofbyte(struct soap*, const char*, int, char const[24], const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_Array24Ofbyte(struct soap*, const char*, char[24], const char*);

#ifndef soap_write_Array24Ofbyte
#define soap_write_Array24Ofbyte(soap, data) ( soap_begin_send(soap) || (soap_serialize_Array24Ofbyte(soap, data), 0) || soap_put_Array24Ofbyte(soap, data, "SOAP-ENC:Array", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_Array24Ofbyte(struct soap*, char const[24], const char*, const char*);

#ifndef soap_read_Array24Ofbyte
#define soap_read_Array24Ofbyte(soap, data) ( soap_begin_recv(soap) || !soap_get_Array24Ofbyte(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_Array24Ofbyte(struct soap*, char[24], const char*, const char*);

#ifndef SOAP_TYPE_Array12Ofbyte
#define SOAP_TYPE_Array12Ofbyte (11)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_Array12Ofbyte(struct soap*, char[12]);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_Array12Ofbyte(struct soap*, char const[12]);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_Array12Ofbyte(struct soap*, const char*, int, char const[12], const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_Array12Ofbyte(struct soap*, const char*, char[12], const char*);

#ifndef soap_write_Array12Ofbyte
#define soap_write_Array12Ofbyte(soap, data) ( soap_begin_send(soap) || (soap_serialize_Array12Ofbyte(soap, data), 0) || soap_put_Array12Ofbyte(soap, data, "SOAP-ENC:Array", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_Array12Ofbyte(struct soap*, char const[12], const char*, const char*);

#ifndef soap_read_Array12Ofbyte
#define soap_read_Array12Ofbyte(soap, data) ( soap_begin_recv(soap) || !soap_get_Array12Ofbyte(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_Array12Ofbyte(struct soap*, char[12], const char*, const char*);

#ifndef SOAP_TYPE_std__vectorTemplateOfsample_t
#define SOAP_TYPE_std__vectorTemplateOfsample_t (51)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfsample_t(struct soap*, std::vector<struct sample_t >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfsample_t(struct soap*, const std::vector<struct sample_t >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfsample_t(struct soap*, const char*, int, const std::vector<struct sample_t >*, const char*);
SOAP_FMAC3 std::vector<struct sample_t >* SOAP_FMAC4 soap_in_std__vectorTemplateOfsample_t(struct soap*, const char*, std::vector<struct sample_t >*, const char*);

#define soap_new_std__vectorTemplateOfsample_t(soap, n) soap_instantiate_std__vectorTemplateOfsample_t(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfsample_t(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<struct sample_t > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfsample_t(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfsample_t(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfwhole_sample_t
#define SOAP_TYPE_std__vectorTemplateOfwhole_sample_t (42)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfwhole_sample_t(struct soap*, std::vector<struct whole_sample_t >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfwhole_sample_t(struct soap*, const std::vector<struct whole_sample_t >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfwhole_sample_t(struct soap*, const char*, int, const std::vector<struct whole_sample_t >*, const char*);
SOAP_FMAC3 std::vector<struct whole_sample_t >* SOAP_FMAC4 soap_in_std__vectorTemplateOfwhole_sample_t(struct soap*, const char*, std::vector<struct whole_sample_t >*, const char*);

#define soap_new_std__vectorTemplateOfwhole_sample_t(soap, n) soap_instantiate_std__vectorTemplateOfwhole_sample_t(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfwhole_sample_t(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<struct whole_sample_t > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfwhole_sample_t(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfwhole_sample_t(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfsock_opt_t
#define SOAP_TYPE_std__vectorTemplateOfsock_opt_t (21)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfsock_opt_t(struct soap*, std::vector<struct sock_opt_t >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfsock_opt_t(struct soap*, const std::vector<struct sock_opt_t >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfsock_opt_t(struct soap*, const char*, int, const std::vector<struct sock_opt_t >*, const char*);
SOAP_FMAC3 std::vector<struct sock_opt_t >* SOAP_FMAC4 soap_in_std__vectorTemplateOfsock_opt_t(struct soap*, const char*, std::vector<struct sock_opt_t >*, const char*);

#define soap_new_std__vectorTemplateOfsock_opt_t(soap, n) soap_instantiate_std__vectorTemplateOfsock_opt_t(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfsock_opt_t(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<struct sock_opt_t > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfsock_opt_t(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfsock_opt_t(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

/* End of soapH.h */
