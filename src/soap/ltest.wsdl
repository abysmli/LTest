<?xml version="1.0" encoding="UTF-8"?>
<definitions name="ltest"
 targetNamespace="http://tempuri.org/ns.xsd/ltest.wsdl"
 xmlns:tns="http://tempuri.org/ns.xsd/ltest.wsdl"
 xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/"
 xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xmlns:xsd="http://www.w3.org/2001/XMLSchema"
 xmlns:ns="http://tempuri.org/ns.xsd"
 xmlns:SOAP="http://schemas.xmlsoap.org/wsdl/soap/"
 xmlns:MIME="http://schemas.xmlsoap.org/wsdl/mime/"
 xmlns:DIME="http://schemas.xmlsoap.org/ws/2002/04/dime/wsdl/"
 xmlns:WSDL="http://schemas.xmlsoap.org/wsdl/"
 xmlns="http://schemas.xmlsoap.org/wsdl/">

<types>

 <schema targetNamespace="http://tempuri.org/ns.xsd"
  xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/"
  xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
  xmlns:ns="http://tempuri.org/ns.xsd"
  xmlns="http://www.w3.org/2001/XMLSchema"
  elementFormDefault="unqualified"
  attributeFormDefault="unqualified">
  <import namespace="http://schemas.xmlsoap.org/soap/encoding/"/>
  <simpleType name="proto-t"><!-- proto_t -->

   <restriction base="xsd:string">
    <enumeration value="P-TCP"/><!-- proto_t::P_TCP -->
    <!-- = 0 -->
    <enumeration value="P-UDP"/><!-- proto_t::P_UDP -->
    <!-- = 1 -->
    <enumeration value="P-SDP"/><!-- proto_t::P_SDP -->
    <!-- = 2 -->
    <enumeration value="P-UDT"/><!-- proto_t::P_UDT -->
    <!-- = 3 -->
    <enumeration value="P-FastTCP"/><!-- proto_t::P_FastTCP -->
    <!-- = 4 -->
    <enumeration value="P-HSTCP"/><!-- proto_t::P_HSTCP -->
    <!-- = 5 -->
   </restriction>
  </simpleType>
  <simpleType name="SourceType"><!-- SourceType -->

   <restriction base="xsd:string">
    <enumeration value="ST-CBR"/><!-- SourceType::ST_CBR -->
    <!-- = 0 -->
    <enumeration value="ST-POISSON"/><!-- SourceType::ST_POISSON -->
    <!-- = 1 -->
    <enumeration value="ST-FIFO"/><!-- SourceType::ST_FIFO -->
    <!-- = 2 -->
    <enumeration value="ST-FS"/><!-- SourceType::ST_FS -->
    <!-- = 3 -->
   </restriction>
  </simpleType>
  <complexType name="tv-type"><!-- tv_type -->

   <sequence>
     <element name="tv-sec" type="xsd:unsignedInt" minOccurs="1" maxOccurs="1"/><!-- tv_type::tv_sec -->
     <element name="tv-usec" type="xsd:unsignedInt" minOccurs="1" maxOccurs="1"/><!-- tv_type::tv_usec -->
   </sequence>
  </complexType>
  <complexType name="sample-t"><!-- sample_t -->

   <sequence>
     <element name="Header" type="ns:Array12Ofbyte" minOccurs="1" maxOccurs="1" nillable="true"/><!-- sample_t::Header -->
   </sequence>
  </complexType>
  <complexType name="sock-opt-t"><!-- sock_opt_t -->

   <sequence>
     <element name="key" type="xsd:string" minOccurs="1" maxOccurs="1"/><!-- sock_opt_t::key -->
     <element name="value" type="xsd:unsignedInt" minOccurs="1" maxOccurs="1"/><!-- sock_opt_t::value -->
   </sequence>
  </complexType>
  <complexType name="whole-sample-t"><!-- whole_sample_t -->

   <sequence>
     <element name="Header" type="ns:Array24Ofbyte" minOccurs="1" maxOccurs="1" nillable="true"/><!-- whole_sample_t::Header -->
   </sequence>
  </complexType>
  <complexType name="sourceDesc-t"><!-- sourceDesc_t -->

   <sequence>
     <element name="StartTime" type="ns:tv-type" minOccurs="1" maxOccurs="1"/><!-- sourceDesc_t::StartTime -->
     <element name="StopTime" type="ns:tv-type" minOccurs="1" maxOccurs="1"/><!-- sourceDesc_t::StopTime -->
     <element name="sample-n" type="xsd:unsignedInt" minOccurs="1" maxOccurs="1"/><!-- sourceDesc_t::sample_n -->
     <element name="maxPDUSize" type="xsd:unsignedInt" minOccurs="1" maxOccurs="1"/><!-- sourceDesc_t::maxPDUSize -->
     <element name="ListenAddr" type="xsd:unsignedInt" minOccurs="1" maxOccurs="1"/><!-- sourceDesc_t::ListenAddr -->
     <element name="ListenPort" type="xsd:unsignedShort" minOccurs="1" maxOccurs="1"/><!-- sourceDesc_t::ListenPort -->
     <element name="Proto" type="ns:proto-t" minOccurs="1" maxOccurs="1"/><!-- sourceDesc_t::Proto -->
     <element name="Prio" type="xsd:int" minOccurs="1" maxOccurs="1"/><!-- sourceDesc_t::Prio -->
     <element name="TOS" type="xsd:byte" minOccurs="1" maxOccurs="1"/><!-- sourceDesc_t::TOS -->
     <element name="Block" type="xsd:boolean" minOccurs="1" maxOccurs="1"/><!-- sourceDesc_t::Block -->
     <element name="SockOpts" type="ns:sock-opt-t" minOccurs="0" maxOccurs="unbounded"/><!-- sourceDesc_t::SockOpts -->
   </sequence>
  </complexType>
  <complexType name="senderDesc-t"><!-- senderDesc_t -->

   <sequence>
     <element name="LocalAddr" type="xsd:unsignedInt" minOccurs="1" maxOccurs="1"/><!-- senderDesc_t::LocalAddr -->
     <element name="LocalPort" type="xsd:unsignedShort" minOccurs="1" maxOccurs="1"/><!-- senderDesc_t::LocalPort -->
     <element name="RemoteAddr" type="xsd:unsignedInt" minOccurs="1" maxOccurs="1"/><!-- senderDesc_t::RemoteAddr -->
     <element name="RemotePort" type="xsd:unsignedShort" minOccurs="1" maxOccurs="1"/><!-- senderDesc_t::RemotePort -->
     <element name="RemoteURL" type="xsd:string" minOccurs="1" maxOccurs="1"/><!-- senderDesc_t::RemoteURL -->
     <element name="Bytes" type="xsd:unsignedInt" minOccurs="1" maxOccurs="1"/><!-- senderDesc_t::Bytes -->
     <element name="Packets" type="xsd:unsignedInt" minOccurs="1" maxOccurs="1"/><!-- senderDesc_t::Packets -->
     <element name="Proto" type="ns:proto-t" minOccurs="1" maxOccurs="1"/><!-- senderDesc_t::Proto -->
     <element name="StartTime" type="ns:tv-type" minOccurs="1" maxOccurs="1"/><!-- senderDesc_t::StartTime -->
     <element name="Duration" type="ns:tv-type" minOccurs="1" maxOccurs="1"/><!-- senderDesc_t::Duration -->
     <element name="FinishTime" type="ns:tv-type" minOccurs="1" maxOccurs="1"/><!-- senderDesc_t::FinishTime -->
     <element name="Priority" type="xsd:int" minOccurs="1" maxOccurs="1"/><!-- senderDesc_t::Priority -->
     <element name="SType" type="ns:SourceType" minOccurs="1" maxOccurs="1"/><!-- senderDesc_t::SType -->
     <element name="TOS" type="xsd:byte" minOccurs="1" maxOccurs="1"/><!-- senderDesc_t::TOS -->
     <element name="BPS" type="xsd:unsignedLong" minOccurs="1" maxOccurs="1"/><!-- senderDesc_t::BPS -->
     <element name="Size" type="xsd:unsignedInt" minOccurs="1" maxOccurs="1"/><!-- senderDesc_t::Size -->
     <element name="FifoName" type="xsd:string" minOccurs="1" maxOccurs="1"/><!-- senderDesc_t::FifoName -->
     <element name="TimeCorrection" type="xsd:boolean" minOccurs="1" maxOccurs="1"/><!-- senderDesc_t::TimeCorrection -->
     <element name="MaxTimeDev" type="xsd:unsignedLong" minOccurs="1" maxOccurs="1"/><!-- senderDesc_t::MaxTimeDev -->
     <element name="SockOpts" type="ns:sock-opt-t" minOccurs="0" maxOccurs="unbounded"/><!-- senderDesc_t::SockOpts -->
   </sequence>
  </complexType>
  <complexType name="BasicSourceStats-t"><!-- BasicSourceStats_t -->

   <sequence>
     <element name="StartTime" type="ns:tv-type" minOccurs="1" maxOccurs="1"/><!-- BasicSourceStats_t::StartTime -->
     <element name="Duration" type="ns:tv-type" minOccurs="1" maxOccurs="1"/><!-- BasicSourceStats_t::Duration -->
     <element name="FinishTime" type="ns:tv-type" minOccurs="1" maxOccurs="1"/><!-- BasicSourceStats_t::FinishTime -->
     <element name="SentPackets" type="xsd:unsignedInt" minOccurs="1" maxOccurs="1"/><!-- BasicSourceStats_t::SentPackets -->
     <element name="SentBytes" type="xsd:long" minOccurs="1" maxOccurs="1"/><!-- BasicSourceStats_t::SentBytes -->
     <element name="RecvPackets" type="xsd:unsignedInt" minOccurs="1" maxOccurs="1"/><!-- BasicSourceStats_t::RecvPackets -->
     <element name="RecvBytes" type="xsd:long" minOccurs="1" maxOccurs="1"/><!-- BasicSourceStats_t::RecvBytes -->
     <element name="Duplicates" type="xsd:unsignedInt" minOccurs="1" maxOccurs="1"/><!-- BasicSourceStats_t::Duplicates -->
     <element name="Reordered" type="xsd:unsignedInt" minOccurs="1" maxOccurs="1"/><!-- BasicSourceStats_t::Reordered -->
     <element name="Corrupted" type="xsd:unsignedInt" minOccurs="1" maxOccurs="1"/><!-- BasicSourceStats_t::Corrupted -->
     <element name="DeltaTime" type="xsd:long" minOccurs="1" maxOccurs="1"/><!-- BasicSourceStats_t::DeltaTime -->
   </sequence>
  </complexType>
  <complexType name="ReleaseSSessionResponse"><!-- ReleaseSSessionResponse -->

   <sequence>
   </sequence>
  </complexType>
  <complexType name="ReleaseRSessionResponse"><!-- ReleaseRSessionResponse -->

   <sequence>
   </sequence>
  </complexType>
  <complexType name="FinishSessionResponse"><!-- FinishSessionResponse -->

   <sequence>
   </sequence>
  </complexType>
  <complexType name="ReleaseUDPTimePortResponse"><!-- ReleaseUDPTimePortResponse -->

   <sequence>
   </sequence>
  </complexType>
  <complexType name="StartRSessionResponse"><!-- StartRSessionResponse -->

   <sequence>
   </sequence>
  </complexType>
  <complexType name="StartSSessionResponse"><!-- StartSSessionResponse -->

   <sequence>
   </sequence>
  </complexType>
  <complexType name="PingResponse"><!-- PingResponse -->

   <sequence>
   </sequence>
  </complexType>
  <complexType name="Array24Ofbyte">
   <complexContent>
    <restriction base="SOAP-ENC:Array">
     <attribute ref="SOAP-ENC:arrayType" WSDL:arrayType="xsd:byte[]"/>
    </restriction>
   </complexContent>
  </complexType>
  <complexType name="Array12Ofbyte">
   <complexContent>
    <restriction base="SOAP-ENC:Array">
     <attribute ref="SOAP-ENC:arrayType" WSDL:arrayType="xsd:byte[]"/>
    </restriction>
   </complexContent>
  </complexType>
  <!-- operation request element -->
  <element name="Port">
   <complexType>
    <sequence>
    </sequence>
   </complexType>
  </element>
  <!-- operation response element -->
  <element name="PortResponse">
   <complexType>
    <sequence>
     <element name="pPort" type="xsd:unsignedShort" minOccurs="1" maxOccurs="1"/><!-- ns__Port::pPort -->
    </sequence>
   </complexType>
  </element>
  <!-- operation request element -->
  <element name="release-ssession">
   <complexType>
    <sequence>
    </sequence>
   </complexType>
  </element>
  <!-- operation response element -->
  <element name="release-ssessionResponse">
   <complexType>
    <sequence>
     <element name="response" type="ns:ReleaseSSessionResponse" minOccurs="1" maxOccurs="1"/><!-- ns__release_ssession::response -->
    </sequence>
   </complexType>
  </element>
  <!-- operation request element -->
  <element name="release-rsession">
   <complexType>
    <sequence>
    </sequence>
   </complexType>
  </element>
  <!-- operation response element -->
  <element name="release-rsessionResponse">
   <complexType>
    <sequence>
     <element name="response" type="ns:ReleaseRSessionResponse" minOccurs="1" maxOccurs="1"/><!-- ns__release_rsession::response -->
    </sequence>
   </complexType>
  </element>
  <!-- operation request element -->
  <element name="get-samples-whole">
   <complexType>
    <sequence>
    </sequence>
   </complexType>
  </element>
  <!-- operation response element -->
  <element name="get-samples-wholeResponse">
   <complexType>
    <sequence>
     <element name="GetSampleList" type="ns:whole-sample-t" minOccurs="1" maxOccurs="unbounded"/><!-- ns__get_samples_whole::GetSampleList -->
    </sequence>
   </complexType>
  </element>
  <!-- operation request element -->
  <element name="getBasicSourceStats">
   <complexType>
    <sequence>
    </sequence>
   </complexType>
  </element>
  <!-- operation response element -->
  <element name="getBasicSourceStatsResponse">
   <complexType>
    <sequence>
     <element name="GetBasicSourceStatics" type="ns:BasicSourceStats-t" minOccurs="1" maxOccurs="1"/><!-- ns__getBasicSourceStats::GetBasicSourceStatics -->
    </sequence>
   </complexType>
  </element>
  <!-- operation request element -->
  <element name="get-samples">
   <complexType>
    <sequence>
    </sequence>
   </complexType>
  </element>
  <!-- operation response element -->
  <element name="get-samplesResponse">
   <complexType>
    <sequence>
     <element name="sample-list-t" type="ns:sample-t" minOccurs="1" maxOccurs="unbounded"/><!-- ns__get_samples::sample_list_t -->
    </sequence>
   </complexType>
  </element>
  <!-- operation request element -->
  <element name="finish-session">
   <complexType>
    <sequence>
     <element name="pLastSeqNo" type="xsd:unsignedInt" minOccurs="1" maxOccurs="1"/><!-- ns__finish_session::pLastSeqNo -->
    </sequence>
   </complexType>
  </element>
  <!-- operation response element -->
  <element name="finish-sessionResponse">
   <complexType>
    <sequence>
     <element name="response" type="ns:FinishSessionResponse" minOccurs="1" maxOccurs="1"/><!-- ns__finish_session::response -->
    </sequence>
   </complexType>
  </element>
  <!-- operation request element -->
  <element name="get-time-by-gsoap">
   <complexType>
    <sequence>
    </sequence>
   </complexType>
  </element>
  <!-- operation response element -->
  <element name="get-time-by-gsoapResponse">
   <complexType>
    <sequence>
     <element name="ptv" type="ns:tv-type" minOccurs="1" maxOccurs="1"/><!-- ns__get_time_by_gsoap::ptv -->
    </sequence>
   </complexType>
  </element>
  <!-- operation request element -->
  <element name="start-UDP-time-port">
   <complexType>
    <sequence>
     <element name="pPort" type="xsd:unsignedShort" minOccurs="1" maxOccurs="1"/><!-- ns__start_UDP_time_port::pPort -->
    </sequence>
   </complexType>
  </element>
  <!-- operation response element -->
  <element name="start-UDP-time-portResponse">
   <complexType>
    <sequence>
     <element name="OPort" type="xsd:unsignedShort" minOccurs="1" maxOccurs="1"/><!-- ns__start_UDP_time_port::OPort -->
    </sequence>
   </complexType>
  </element>
  <!-- operation request element -->
  <element name="release-UDP-time-port">
   <complexType>
    <sequence>
    </sequence>
   </complexType>
  </element>
  <!-- operation response element -->
  <element name="release-UDP-time-portResponse">
   <complexType>
    <sequence>
     <element name="response" type="ns:ReleaseUDPTimePortResponse" minOccurs="1" maxOccurs="1"/><!-- ns__release_UDP_time_port::response -->
    </sequence>
   </complexType>
  </element>
  <!-- operation request element -->
  <element name="start-rsession">
   <complexType>
    <sequence>
     <element name="sDec" type="ns:sourceDesc-t" minOccurs="1" maxOccurs="1"/><!-- ns__start_rsession::sDec -->
    </sequence>
   </complexType>
  </element>
  <!-- operation response element -->
  <element name="start-rsessionResponse">
   <complexType>
    <sequence>
     <element name="response" type="ns:StartRSessionResponse" minOccurs="1" maxOccurs="1"/><!-- ns__start_rsession::response -->
    </sequence>
   </complexType>
  </element>
  <!-- operation request element -->
  <element name="start-ssession">
   <complexType>
    <sequence>
     <element name="sDec" type="ns:sourceDesc-t" minOccurs="1" maxOccurs="1"/><!-- ns__start_ssession::sDec -->
     <element name="senderDesc" type="ns:senderDesc-t" minOccurs="1" maxOccurs="1"/><!-- ns__start_ssession::senderDesc -->
    </sequence>
   </complexType>
  </element>
  <!-- operation response element -->
  <element name="start-ssessionResponse">
   <complexType>
    <sequence>
     <element name="response" type="ns:StartSSessionResponse" minOccurs="1" maxOccurs="1"/><!-- ns__start_ssession::response -->
    </sequence>
   </complexType>
  </element>
  <!-- operation request element -->
  <element name="print-sDesc">
   <complexType>
    <sequence>
     <element name="sDec" type="ns:sourceDesc-t" minOccurs="1" maxOccurs="1"/><!-- ns__print_sDesc::sDec -->
    </sequence>
   </complexType>
  </element>
  <!-- operation response element -->
  <element name="print-sDescResponse">
   <complexType>
    <sequence>
     <element name="str" type="xsd:string" minOccurs="1" maxOccurs="1"/><!-- ns__print_sDesc::str -->
    </sequence>
   </complexType>
  </element>
  <!-- operation request element -->
  <element name="ping">
   <complexType>
    <sequence>
    </sequence>
   </complexType>
  </element>
  <!-- operation response element -->
  <element name="pingResponse">
   <complexType>
    <sequence>
     <element name="response" type="ns:PingResponse" minOccurs="1" maxOccurs="1"/><!-- ns__ping::response -->
    </sequence>
   </complexType>
  </element>
 </schema>

</types>

<message name="PortRequest">
 <part name="parameters" element="ns:Port"/><!-- ns__Port::ns__Port -->
</message>

<message name="PortResponse">
 <part name="parameters" element="ns:PortResponse"/>
</message>

<message name="release-ssessionRequest">
 <part name="parameters" element="ns:release-ssession"/><!-- ns__release_ssession::ns__release_ssession -->
</message>

<message name="release-ssessionResponse">
 <part name="parameters" element="ns:release-ssessionResponse"/>
</message>

<message name="release-rsessionRequest">
 <part name="parameters" element="ns:release-rsession"/><!-- ns__release_rsession::ns__release_rsession -->
</message>

<message name="release-rsessionResponse">
 <part name="parameters" element="ns:release-rsessionResponse"/>
</message>

<message name="get-samples-wholeRequest">
 <part name="parameters" element="ns:get-samples-whole"/><!-- ns__get_samples_whole::ns__get_samples_whole -->
</message>

<message name="get-samples-wholeResponse">
 <part name="parameters" element="ns:get-samples-wholeResponse"/>
</message>

<message name="getBasicSourceStatsRequest">
 <part name="parameters" element="ns:getBasicSourceStats"/><!-- ns__getBasicSourceStats::ns__getBasicSourceStats -->
</message>

<message name="getBasicSourceStatsResponse">
 <part name="parameters" element="ns:getBasicSourceStatsResponse"/>
</message>

<message name="get-samplesRequest">
 <part name="parameters" element="ns:get-samples"/><!-- ns__get_samples::ns__get_samples -->
</message>

<message name="get-samplesResponse">
 <part name="parameters" element="ns:get-samplesResponse"/>
</message>

<message name="finish-sessionRequest">
 <part name="parameters" element="ns:finish-session"/><!-- ns__finish_session::ns__finish_session -->
</message>

<message name="finish-sessionResponse">
 <part name="parameters" element="ns:finish-sessionResponse"/>
</message>

<message name="get-time-by-gsoapRequest">
 <part name="parameters" element="ns:get-time-by-gsoap"/><!-- ns__get_time_by_gsoap::ns__get_time_by_gsoap -->
</message>

<message name="get-time-by-gsoapResponse">
 <part name="parameters" element="ns:get-time-by-gsoapResponse"/>
</message>

<message name="start-UDP-time-portRequest">
 <part name="parameters" element="ns:start-UDP-time-port"/><!-- ns__start_UDP_time_port::ns__start_UDP_time_port -->
</message>

<message name="start-UDP-time-portResponse">
 <part name="parameters" element="ns:start-UDP-time-portResponse"/>
</message>

<message name="release-UDP-time-portRequest">
 <part name="parameters" element="ns:release-UDP-time-port"/><!-- ns__release_UDP_time_port::ns__release_UDP_time_port -->
</message>

<message name="release-UDP-time-portResponse">
 <part name="parameters" element="ns:release-UDP-time-portResponse"/>
</message>

<message name="start-rsessionRequest">
 <part name="parameters" element="ns:start-rsession"/><!-- ns__start_rsession::ns__start_rsession -->
</message>

<message name="start-rsessionResponse">
 <part name="parameters" element="ns:start-rsessionResponse"/>
</message>

<message name="start-ssessionRequest">
 <part name="parameters" element="ns:start-ssession"/><!-- ns__start_ssession::ns__start_ssession -->
</message>

<message name="start-ssessionResponse">
 <part name="parameters" element="ns:start-ssessionResponse"/>
</message>

<message name="print-sDescRequest">
 <part name="parameters" element="ns:print-sDesc"/><!-- ns__print_sDesc::ns__print_sDesc -->
</message>

<message name="print-sDescResponse">
 <part name="parameters" element="ns:print-sDescResponse"/>
</message>

<message name="pingRequest">
 <part name="parameters" element="ns:ping"/><!-- ns__ping::ns__ping -->
</message>

<message name="pingResponse">
 <part name="parameters" element="ns:pingResponse"/>
</message>

<portType name="ltestPortType">
 <operation name="Port">
  <documentation>Service definition of function ns__Port</documentation>
  <input message="tns:PortRequest"/>
  <output message="tns:PortResponse"/>
 </operation>
 <operation name="release-ssession">
  <documentation>Service definition of function ns__release_ssession</documentation>
  <input message="tns:release-ssessionRequest"/>
  <output message="tns:release-ssessionResponse"/>
 </operation>
 <operation name="release-rsession">
  <documentation>Service definition of function ns__release_rsession</documentation>
  <input message="tns:release-rsessionRequest"/>
  <output message="tns:release-rsessionResponse"/>
 </operation>
 <operation name="get-samples-whole">
  <documentation>Service definition of function ns__get_samples_whole</documentation>
  <input message="tns:get-samples-wholeRequest"/>
  <output message="tns:get-samples-wholeResponse"/>
 </operation>
 <operation name="getBasicSourceStats">
  <documentation>Service definition of function ns__getBasicSourceStats</documentation>
  <input message="tns:getBasicSourceStatsRequest"/>
  <output message="tns:getBasicSourceStatsResponse"/>
 </operation>
 <operation name="get-samples">
  <documentation>Service definition of function ns__get_samples</documentation>
  <input message="tns:get-samplesRequest"/>
  <output message="tns:get-samplesResponse"/>
 </operation>
 <operation name="finish-session">
  <documentation>Service definition of function ns__finish_session</documentation>
  <input message="tns:finish-sessionRequest"/>
  <output message="tns:finish-sessionResponse"/>
 </operation>
 <operation name="get-time-by-gsoap">
  <documentation>Service definition of function ns__get_time_by_gsoap</documentation>
  <input message="tns:get-time-by-gsoapRequest"/>
  <output message="tns:get-time-by-gsoapResponse"/>
 </operation>
 <operation name="start-UDP-time-port">
  <documentation>Service definition of function ns__start_UDP_time_port</documentation>
  <input message="tns:start-UDP-time-portRequest"/>
  <output message="tns:start-UDP-time-portResponse"/>
 </operation>
 <operation name="release-UDP-time-port">
  <documentation>Service definition of function ns__release_UDP_time_port</documentation>
  <input message="tns:release-UDP-time-portRequest"/>
  <output message="tns:release-UDP-time-portResponse"/>
 </operation>
 <operation name="start-rsession">
  <documentation>Service definition of function ns__start_rsession</documentation>
  <input message="tns:start-rsessionRequest"/>
  <output message="tns:start-rsessionResponse"/>
 </operation>
 <operation name="start-ssession">
  <documentation>Service definition of function ns__start_ssession</documentation>
  <input message="tns:start-ssessionRequest"/>
  <output message="tns:start-ssessionResponse"/>
 </operation>
 <operation name="print-sDesc">
  <documentation>Service definition of function ns__print_sDesc</documentation>
  <input message="tns:print-sDescRequest"/>
  <output message="tns:print-sDescResponse"/>
 </operation>
 <operation name="ping">
  <documentation>Service definition of function ns__ping</documentation>
  <input message="tns:pingRequest"/>
  <output message="tns:pingResponse"/>
 </operation>
</portType>

<binding name="ltest" type="tns:ltestPortType">
 <SOAP:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
 <operation name="Port">
  <SOAP:operation soapAction=""/>
  <input>
     <SOAP:body parts="parameters" use="literal"/>
  </input>
  <output>
     <SOAP:body parts="parameters" use="literal"/>
  </output>
 </operation>
 <operation name="release-ssession">
  <SOAP:operation soapAction=""/>
  <input>
     <SOAP:body parts="parameters" use="literal"/>
  </input>
  <output>
     <SOAP:body parts="parameters" use="literal"/>
  </output>
 </operation>
 <operation name="release-rsession">
  <SOAP:operation soapAction=""/>
  <input>
     <SOAP:body parts="parameters" use="literal"/>
  </input>
  <output>
     <SOAP:body parts="parameters" use="literal"/>
  </output>
 </operation>
 <operation name="get-samples-whole">
  <SOAP:operation soapAction=""/>
  <input>
     <SOAP:body parts="parameters" use="literal"/>
  </input>
  <output>
     <SOAP:body parts="parameters" use="literal"/>
  </output>
 </operation>
 <operation name="getBasicSourceStats">
  <SOAP:operation soapAction=""/>
  <input>
     <SOAP:body parts="parameters" use="literal"/>
  </input>
  <output>
     <SOAP:body parts="parameters" use="literal"/>
  </output>
 </operation>
 <operation name="get-samples">
  <SOAP:operation soapAction=""/>
  <input>
     <SOAP:body parts="parameters" use="literal"/>
  </input>
  <output>
     <SOAP:body parts="parameters" use="literal"/>
  </output>
 </operation>
 <operation name="finish-session">
  <SOAP:operation soapAction=""/>
  <input>
     <SOAP:body parts="parameters" use="literal"/>
  </input>
  <output>
     <SOAP:body parts="parameters" use="literal"/>
  </output>
 </operation>
 <operation name="get-time-by-gsoap">
  <SOAP:operation soapAction=""/>
  <input>
     <SOAP:body parts="parameters" use="literal"/>
  </input>
  <output>
     <SOAP:body parts="parameters" use="literal"/>
  </output>
 </operation>
 <operation name="start-UDP-time-port">
  <SOAP:operation soapAction=""/>
  <input>
     <SOAP:body parts="parameters" use="literal"/>
  </input>
  <output>
     <SOAP:body parts="parameters" use="literal"/>
  </output>
 </operation>
 <operation name="release-UDP-time-port">
  <SOAP:operation soapAction=""/>
  <input>
     <SOAP:body parts="parameters" use="literal"/>
  </input>
  <output>
     <SOAP:body parts="parameters" use="literal"/>
  </output>
 </operation>
 <operation name="start-rsession">
  <SOAP:operation soapAction=""/>
  <input>
     <SOAP:body parts="parameters" use="literal"/>
  </input>
  <output>
     <SOAP:body parts="parameters" use="literal"/>
  </output>
 </operation>
 <operation name="start-ssession">
  <SOAP:operation soapAction=""/>
  <input>
     <SOAP:body parts="parameters" use="literal"/>
  </input>
  <output>
     <SOAP:body parts="parameters" use="literal"/>
  </output>
 </operation>
 <operation name="print-sDesc">
  <SOAP:operation soapAction=""/>
  <input>
     <SOAP:body parts="parameters" use="literal"/>
  </input>
  <output>
     <SOAP:body parts="parameters" use="literal"/>
  </output>
 </operation>
 <operation name="ping">
  <SOAP:operation soapAction=""/>
  <input>
     <SOAP:body parts="parameters" use="literal"/>
  </input>
  <output>
     <SOAP:body parts="parameters" use="literal"/>
  </output>
 </operation>
</binding>

<service name="ltest">
 <documentation>gSOAP 2.8.10 generated service definition</documentation>
 <port name="ltest" binding="tns:ltest">
  <SOAP:address location="http://localhost:5555/"/>
 </port>
</service>

</definitions>
